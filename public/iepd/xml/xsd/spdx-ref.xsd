<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="spdx:xsd::1.0"
           xmlns:spd="spdx:xsd::1.0/ref"
           xmlns:ct="http://release.niem.gov/niem/conformanceTargets/3.0/"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:niem-xs="http://release.niem.gov/niem/proxy/xsd/4.0/"
           xmlns:structures="http://release.niem.gov/niem/structures/4.0/"
           xmlns:appinfo="http://release.niem.gov/niem/appinfo/4.0/"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           attributeFormDefault="unqualified"
           elementFormDefault="qualified"
           targetNamespace="spdx:xsd::1.0"
           version="1"
           xsi:schemaLocation="http://release.niem.gov/niem/appinfo/4.0/ niem/utility/appinfo/4.0/appinfo.xsd http://release.niem.gov/niem/conformanceTargets/3.0/ ext/niem/utility/conformanceTargets/3.0/conformanceTargets.xsd"
           ct:conformanceTargets="http://reference.niem.gov/niem/specification/naming-and-design-rules/4.0/#ReferenceSchemaDocument">
   <xs:import schemaLocation="ext/niem/utility/structures/4.0/structures.xsd"
              namespace="http://release.niem.gov/niem/structures/4.0/"/>
   <xs:import schemaLocation="ext/niem/utility/appinfo/4.0/appinfo.xsd"
              namespace="http://release.niem.gov/niem/appinfo/4.0/"/>
   <xs:import schemaLocation="ext/niem/proxy/xsd/4.0/xs.xsd"
              namespace="http://release.niem.gov/niem/proxy/xsd/4.0/"/>
   <xs:annotation>
      <xs:documentation>This specification describes the SPDX® language, defined as a dictionary of named properties and classes using W3C's RDF Technology. SPDX® is a designed to allow the exchange of data about software packages. This information includes general information about the package, licensing information about the package as a whole, a manifest of files contained in the package and licensing information related to the contained files. Known issues: - File fileType cardinality should be 0 or more instead of required one.</xs:documentation>
   </xs:annotation>
   <xs:complexType name="LicenseType">
      <xs:annotation>
         <xs:documentation>A data type for License type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="License"
                         xmlname="License"
                         comment="A License represents a copyright license. The SPDX license list website is annotated with these properties (using RDFa) to allow license data published there to be easily processed. The license list is populated in accordance with the License List fields guidelines. These guidelines are not normative and may change over time. SPDX tooling should not rely on values in the license list conforming to the current guidelines."
                         rdf="http://spdx.org/rdf/terms#License"
                         subclassof="SimpleLicensingInfo"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="SimpleLicensingInfoType">
            <xs:sequence>
               <xs:element ref="IsDeprecatedLicenseId" minOccurs="0"/>
               <xs:element ref="IsOsiApproved" minOccurs="1"/>
               <xs:element ref="IsFsfLibre" minOccurs="0"/>
               <xs:element ref="StandardLicenseHeader" minOccurs="0"/>
               <xs:element ref="LicenseText" minOccurs="1"/>
               <xs:element ref="StandardLicenseTemplate" minOccurs="1"/>
               <xs:element ref="LicenseAugmentationPoint" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:simpleType name="AlgorithmCodeSimpleType">
      <xs:annotation>
         <xs:documentation>A data type for Algorithm properties</xs:documentation>
         <xs:appinfo>
            <SimpleType name="AlgorithmCodeSimpleType"
                        rdf="http://spdx.org/rdf/terms#algorithm"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="Md5">
            <xs:annotation>
               <xs:documentation>Indicates the algorithm used was MD5</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#algorithm"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="Sha1">
            <xs:annotation>
               <xs:documentation>Indicates the algorithm used was SHA-1</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#algorithm"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="Sha256">
            <xs:annotation>
               <xs:documentation>Indicates the algorithm used was SHA256</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#algorithm"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="AnnotationTypeCodeSimpleType">
      <xs:annotation>
         <xs:documentation>A data type for AnnotationType properties</xs:documentation>
         <xs:appinfo>
            <SimpleType name="AnnotationTypeCodeSimpleType"
                        rdf="http://spdx.org/rdf/terms#annotationType"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="Other">
            <xs:annotation>
               <xs:documentation>Type of annotation which does not fit in any of the pre-defined annotation types.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#annotationType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="Review">
            <xs:annotation>
               <xs:documentation>A Review represents an audit and signoff by an individual, organization or tool on the information for an SpdxElement.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#annotationType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="CopyrightTextCodeSimpleType">
      <xs:annotation>
         <xs:documentation>A data type for CopyrightText properties</xs:documentation>
         <xs:appinfo>
            <SimpleType name="CopyrightTextCodeSimpleType"
                        rdf="http://spdx.org/rdf/terms#copyrightText"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="Noassertion">
            <xs:annotation>
               <xs:documentation>Indicates that the preparer of the SPDX document is not making any assertion regarding the value of this field.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#copyrightText"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="None">
            <xs:annotation>
               <xs:documentation>When this value is used as the object of a property it indicates that the preparer of the SpdxDocument believes that there is no value for the property. This value should only be used if there is sufficient evidence to support this assertion.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#copyrightText"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="DownloadLocationCodeSimpleType">
      <xs:annotation>
         <xs:documentation>A data type for DownloadLocation properties</xs:documentation>
         <xs:appinfo>
            <SimpleType name="DownloadLocationCodeSimpleType"
                        rdf="http://spdx.org/rdf/terms#downloadLocation"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="Noassertion">
            <xs:annotation>
               <xs:documentation>Indicates that the preparer of the SPDX document is not making any assertion regarding the value of this field.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#downloadLocation"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="None">
            <xs:annotation>
               <xs:documentation>When this value is used as the object of a property it indicates that the preparer of the SpdxDocument believes that there is no value for the property. This value should only be used if there is sufficient evidence to support this assertion.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#downloadLocation"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="FileTypeCodeSimpleType">
      <xs:annotation>
         <xs:documentation>A data type for FileType properties</xs:documentation>
         <xs:appinfo>
            <SimpleType name="FileTypeCodeSimpleType" rdf="http://spdx.org/rdf/terms#fileType"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="Application">
            <xs:annotation>
               <xs:documentation>The file is associated with a specific application type (MIME type of application/* )</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#fileType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="Archive">
            <xs:annotation>
               <xs:documentation>Indicates the file is an archive file.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#fileType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="Audio">
            <xs:annotation>
               <xs:documentation>The file is associated with an audio file (MIME type of audio/* , ie. .mp3 ); IMAGE if the file is assoicated with an picture image file (MIME type of image/*, ie. .jpg, .gif )</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#fileType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="Binary">
            <xs:annotation>
               <xs:documentation>Indicates the file is not a text file. spdx:filetype_archive is preferred for archive files even though they are binary.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#fileType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="Documentation">
            <xs:annotation>
               <xs:documentation>Website containing the documentation related to the repository identifier</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#fileType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="Image">
            <xs:annotation>
               <xs:documentation>The file is assoicated with an picture image file (MIME type of image/*, ie. .jpg, .gif ).</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#fileType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="Other">
            <xs:annotation>
               <xs:documentation>Type of annotation which does not fit in any of the pre-defined annotation types.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#fileType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="Source">
            <xs:annotation>
               <xs:documentation>Indicates the file is a source code file.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#fileType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="Spdx">
            <xs:annotation>
               <xs:documentation>The file is an SPDX document.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#fileType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="Text">
            <xs:annotation>
               <xs:documentation>The file is human readable text file (MIME type of text/*).</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#fileType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="Video">
            <xs:annotation>
               <xs:documentation>The file is associated with a video file type (MIME type of video/*).</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#fileType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="LicenseConcludedCodeSimpleType">
      <xs:annotation>
         <xs:documentation>A data type for LicenseConcluded properties</xs:documentation>
         <xs:appinfo>
            <SimpleType name="LicenseConcludedCodeSimpleType"
                        rdf="http://spdx.org/rdf/terms#licenseConcluded"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="Noassertion">
            <xs:annotation>
               <xs:documentation>Indicates that the preparer of the SPDX document is not making any assertion regarding the value of this field.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#licenseConcluded"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="None">
            <xs:annotation>
               <xs:documentation>When this value is used as the object of a property it indicates that the preparer of the SpdxDocument believes that there is no value for the property. This value should only be used if there is sufficient evidence to support this assertion.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#licenseConcluded"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="LicenseDeclaredCodeSimpleType">
      <xs:annotation>
         <xs:documentation>A data type for LicenseDeclared properties</xs:documentation>
         <xs:appinfo>
            <SimpleType name="LicenseDeclaredCodeSimpleType"
                        rdf="http://spdx.org/rdf/terms#licenseDeclared"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="Noassertion">
            <xs:annotation>
               <xs:documentation>Indicates that the preparer of the SPDX document is not making any assertion regarding the value of this field.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#licenseDeclared"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="None">
            <xs:annotation>
               <xs:documentation>When this value is used as the object of a property it indicates that the preparer of the SpdxDocument believes that there is no value for the property. This value should only be used if there is sufficient evidence to support this assertion.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#licenseDeclared"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="LicenseInfoFromFilesCodeSimpleType">
      <xs:annotation>
         <xs:documentation>A data type for LicenseInfoFromFiles properties</xs:documentation>
         <xs:appinfo>
            <SimpleType name="LicenseInfoFromFilesCodeSimpleType"
                        rdf="http://spdx.org/rdf/terms#licenseInfoFromFiles"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="Noassertion">
            <xs:annotation>
               <xs:documentation>Indicates that the preparer of the SPDX document is not making any assertion regarding the value of this field.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#licenseInfoFromFiles"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="None">
            <xs:annotation>
               <xs:documentation>When this value is used as the object of a property it indicates that the preparer of the SpdxDocument believes that there is no value for the property. This value should only be used if there is sufficient evidence to support this assertion.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#licenseInfoFromFiles"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="ReferenceCategoryCodeSimpleType">
      <xs:annotation>
         <xs:documentation>A data type for ReferenceCategory properties</xs:documentation>
         <xs:appinfo>
            <SimpleType name="ReferenceCategoryCodeSimpleType"
                        rdf="http://spdx.org/rdf/terms#referenceCategory"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="Other">
            <xs:annotation>
               <xs:documentation>Type of annotation which does not fit in any of the pre-defined annotation types.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#referenceCategory"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="PackageManager">
            <xs:annotation>
               <xs:documentation>Reference Category</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#referenceCategory"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="Security">
            <xs:annotation>
               <xs:documentation>Reference Category</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#referenceCategory"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="RelationshipTypeCodeSimpleType">
      <xs:annotation>
         <xs:documentation>A data type for RelationshipType properties</xs:documentation>
         <xs:appinfo>
            <SimpleType name="RelationshipTypeCodeSimpleType"
                        rdf="http://spdx.org/rdf/terms#relationshipType"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="Amendment">
            <xs:annotation>
               <xs:documentation>To be used when SPDXRef-A amends the SPDX information in SPDXRef-B.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="AncestorOf">
            <xs:annotation>
               <xs:documentation>A Relationship of relationshipType_ancestorOf expresses that an SPDXElement is an ancestor of (same lineage but pre-dates) the relatedSPDXElement. For example, an upstream File is an ancestor of a modified downstream File</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="BuildToolOf">
            <xs:annotation>
               <xs:documentation>To be used when SPDXRef-A is used to to build SPDXRef-B.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="ContainedBy">
            <xs:annotation>
               <xs:documentation>A Relationship of relationshipType_containedBy expresses that an SPDXElement is contained by the relatedSPDXElement. For example, a File contained by a Package.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="Contains">
            <xs:annotation>
               <xs:documentation>A Relationship of relationshipType_contains expresses that an SPDXElement contains the relatedSPDXElement. For example, a Package contains a File. (relationshipType_contains introduced in SPDX 2.0 deprecates property 'hasFile' from SPDX 1.2)</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="CopyOf">
            <xs:annotation>
               <xs:documentation>A Relationship of relationshipType_copyOf expresses that the SPDXElement is an exact copy of the relatedSDPXElement. For example, a downstream distribution of a binary library which was copied from the upstream package.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="DataFileOf">
            <xs:annotation>
               <xs:documentation>Is to be used when SPDXRef-A is a data file used in SPDXRef-B.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="DescendantOf">
            <xs:annotation>
               <xs:documentation>A Relationship of relationshipType_descendantOf expresses that an SPDXElement is a descendant of (same lineage but post-dates) the relatedSPDXElement. For example, an downstream File that was modified is a descendant of an upstream File</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="DescribedBy">
            <xs:annotation>
               <xs:documentation>Is to be used an SPDXRef-A is described by SPDXRef-Document.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="Describes">
            <xs:annotation>
               <xs:documentation>Is to be used when SPDXRef-DOCUMENT describes SPDXRef-A.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="DistributionArtifact">
            <xs:annotation>
               <xs:documentation>A Relationship of relationshipType_distributionArtifact expresses that distributing the SPDXElement requires that the relatedSPDXElement also be distributed. For example, distributing a binary File may require that a source tarball (another File) be made available with the distribuiton.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="Documentation">
            <xs:annotation>
               <xs:documentation>Website containing the documentation related to the repository identifier</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="DynamicLink">
            <xs:annotation>
               <xs:documentation>Is to be used when SPDXRef-A dynamically links to SPDXRef-B.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="ExpandedFromArchive">
            <xs:annotation>
               <xs:documentation>A Relationship of relationshipType_expandedFromArchive expresses that the SPDXElement is a file which was epanded from a relatedSPDXElement file. For example, if there is an archive file xyz.tar.gz containing a file foo.c the archive file was expanded in a directory arch/xyz, the file arch/xyz/foo.c would have a relationshipType_expandedFromArchive with the file xyz.tar.gz.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="FileAdded">
            <xs:annotation>
               <xs:documentation>A Relationship of relationshipType_fileAdded expresses that the SPDXElement is a file which has been added to the relatedSPDXElement package. For example, a package (the relatedSPDXElement) has been patched to remove a file (the SPDXElement). This relationship is typically used to express the result of a patched package when the actual patchfile is not present.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="FileDeleted">
            <xs:annotation>
               <xs:documentation>A Relationship of relationshipType_fileDeleted expresses that the SPDXElement is a package where the relatedSPDXElement file has been removed. For example, a package has been patched to remove a file a file (the relatedSPDXElement resulting in the patched package (the SPDXElement). This relationship is typically used to express the result of a patched package when the actual patchfile is not present.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="FileModified">
            <xs:annotation>
               <xs:documentation>A Relationship of relationshipType_fileModified expresses that the SPDXElement is a file which is a modified version of the relatedSPDXElement file. For example, a file (the SPDXElement) has been patched to modify the contents of the original file (the SPDXElement). This relationship is typically used to express the result of a patched package when the actual patchfile is not present.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="GeneratedFrom">
            <xs:annotation>
               <xs:documentation>A Relationship of relationshipType_generatedFrom expresses that an SPDXElement was generated from the relatedSPDXElement. For example, a binary File might have been generated from a source File.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="Generates">
            <xs:annotation>
               <xs:documentation>A Relationship of relationshipType_generates expresses that an SPDXElement generates the relatedSPDXElement. For example, a source File generates a binary File.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="HasPrerequisite">
            <xs:annotation>
               <xs:documentation>Is to be used when SPDXRef-A has as a prerequisite SPDXRef-B.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="MetafileOf">
            <xs:annotation>
               <xs:documentation>To be used when SPDXRef-A is a metafile of SPDXRef-B.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="OptionalComponentOf">
            <xs:annotation>
               <xs:documentation>To be used when SPDXRef-A is an optional component of SPDXRef-B.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="Other">
            <xs:annotation>
               <xs:documentation>Type of annotation which does not fit in any of the pre-defined annotation types.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="PackageOf">
            <xs:annotation>
               <xs:documentation>To be used when SPDXRef-A is used as a package as part of SPDXRef-B.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="PatchApplied">
            <xs:annotation>
               <xs:documentation>A Relationship of relationshipType_patchApplied expresses that the SPDXElement is a 'patchfile' that was applied and produced the relatedSPDXElement. For example, a .diff File relates to a specific file where the diff was applied.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="PatchFor">
            <xs:annotation>
               <xs:documentation>A Relationship of relationshipType_patchFor expresses that the SPDXElement is a 'patchfile' that is designed to patch (apply modifications to) the relatedSPDXElement. For example, relationship from a .diff File to a Package it is designed to patch.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="PrerequisiteFor">
            <xs:annotation>
               <xs:documentation>Is to be used when SPDXRef-A is a prerequisite for SPDXRef-B</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="StaticLink">
            <xs:annotation>
               <xs:documentation>Is to be used when SPDXRef-A statically links to SPDXRef-B.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="TestcaseOf">
            <xs:annotation>
               <xs:documentation>Is to be used when SPDXRef-A is a test case used in testing SPDXRef-B.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration value="VariantOf">
            <xs:annotation>
               <xs:documentation>A Relationship of relationshipType_variantOf expresses that an SPDXElement is a variant of the relatedSPDXElement, but it is not clear which came first. For example, if the content of two Files differs by some edit, but there is no way to tell which came first (no reliable date information), then one File is a variant of the other File.</xs:documentation>
               <xs:appinfo>
                  <Enum rdf="http://spdx.org/rdf/terms#relationshipType"/>
               </xs:appinfo>
            </xs:annotation>
         </xs:enumeration>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="AlgorithmCodeType">
      <xs:annotation>
         <xs:documentation>A data type for Algorithm properties</xs:documentation>
         <xs:appinfo>
            <ComplexType name="Algorithm CodeSimpleType"
                         rdf="http://spdx.org/rdf/terms#algorithm"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="AlgorithmCodeSimpleType">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="AnnotationDateType">
      <xs:annotation>
         <xs:documentation>A data type for Identify when the comment was made. This is to be specified according to the combined date and time in the UTC format, as specified in the ISO 8601 standard.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="annotationDate"
                         xmlname="AnnotationDate"
                         comment="Identify when the comment was made. This is to be specified according to the combined date and time in the UTC format, as specified in the ISO 8601 standard."
                         rdf="http://spdx.org/rdf/terms#annotationDate"
                         domain="Annotation"
                         subpropertyof="Date"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:dateTime">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="AnnotationType">
      <xs:annotation>
         <xs:documentation>A data type for Annotation type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="Annotation"
                         xmlname="Annotation"
                         comment="An Annotation is a comment on an SpdxItem by an agent."
                         rdf="http://spdx.org/rdf/terms#Annotation"
                         subclassof="Thing"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="structures:ObjectType">
            <xs:sequence>
               <xs:element ref="Date" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="AnnotationTypeCode"/>
               <xs:element ref="Comment" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="Annotator" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="AnnotationAugmentationPoint"
                           minOccurs="0"
                           maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="AnnotationTypeCodeType">
      <xs:annotation>
         <xs:documentation>A data type for AnnotationType properties</xs:documentation>
         <xs:appinfo>
            <ComplexType name="AnnotationType CodeSimpleType"
                         rdf="http://spdx.org/rdf/terms#annotationType"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="AnnotationTypeCodeSimpleType">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="AnnotatorType">
      <xs:annotation>
         <xs:documentation>A data type for This field identifies the person, organization or tool that has commented on a file, package, or entire document.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="annotator"
                         xmlname="Annotator"
                         comment="This field identifies the person, organization or tool that has commented on a file, package, or entire document."
                         rdf="http://spdx.org/rdf/terms#annotator"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="AnyLicenseInfoType">
      <xs:annotation>
         <xs:documentation>A data type for AnyLicenseInfo type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="AnyLicenseInfo"
                         xmlname="AnyLicenseInfo"
                         comment="The AnyLicenseInfo class includes all resources that represent licensing information."
                         rdf="http://spdx.org/rdf/terms#AnyLicenseInfo"
                         definedby="AnyLicenseInfo"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="structures:ObjectType">
            <xs:sequence>
               <xs:element ref="AnyLicenseInfoAugmentationPoint"
                           minOccurs="0"
                           maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ByteOffsetPointerType">
      <xs:annotation>
         <xs:documentation>A data type for ByteOffsetPointer type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="ByteOffsetPointer"
                         xmlname="ByteOffsetPointer"
                         comment="Single pointer using a byte offset from the start of the reference."
                         rdf="http://www.w3.org/2009/pointers#ByteOffsetPointer"
                         subclassof="OffsetPointer"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="OffsetPointerType">
            <xs:sequence>
               <xs:element ref="ByteOffsetPointerAugmentationPoint"
                           minOccurs="0"
                           maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ChecksumType">
      <xs:annotation>
         <xs:documentation>A data type for Checksum type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="Checksum"
                         xmlname="Checksum"
                         comment="A Checksum is value that allows the contents of a file to be authenticated. Even small changes to the content of the file will change its checksum. This class allows the results of a variety of checksum and cryptographic message digest algorithms to be represented."
                         rdf="http://spdx.org/rdf/terms#Checksum"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="structures:ObjectType">
            <xs:sequence>
               <xs:element ref="ChecksumValue" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="AlgorithmCode"/>
               <xs:element ref="ChecksumAugmentationPoint" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ChecksumValueType">
      <xs:annotation>
         <xs:documentation>A data type for The checksumValue property provides a lower case hexidecimal encoded digest value produced using a specific algorithm.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="checksumValue"
                         xmlname="ChecksumValue"
                         comment="The checksumValue property provides a lower case hexidecimal encoded digest value produced using a specific algorithm."
                         rdf="http://spdx.org/rdf/terms#checksumValue"
                         domain="Checksum"
                         range="HexBinary"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:hexBinary">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="CommentType">
      <xs:annotation>
         <xs:documentation>A data type for Comment</xs:documentation>
         <xs:appinfo>
            <ComplexType name="comment"
                         xmlname="Comment"
                         comment=""
                         rdf="http://www.w3.org/2000/01/rdf-schema#comment"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="CompoundPointerType">
      <xs:annotation>
         <xs:documentation>A data type for CompoundPointer type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="CompoundPointer"
                         xmlname="CompoundPointer"
                         comment="An abstract method made of a pair of pointers to a defined section to be subclassed for extensibility."
                         rdf="http://www.w3.org/2009/pointers#CompoundPointer"
                         subclassof="Pointer"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="PointerType">
            <xs:sequence>
               <xs:element ref="CompoundPointerAugmentationPoint"
                           minOccurs="0"
                           maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ConjunctiveLicenseSetType">
      <xs:annotation>
         <xs:documentation>A data type for ConjunctiveLicenseSet type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="ConjunctiveLicenseSet"
                         xmlname="ConjunctiveLicenseSet"
                         comment="A ConjunctiveLicenseSet represents a set of licensing information all of which apply."
                         rdf="http://spdx.org/rdf/terms#ConjunctiveLicenseSet"
                         subclassof="AnyLicenseInfo"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="AnyLicenseInfoType">
            <xs:sequence>
               <xs:element ref="Member" minOccurs="2" maxOccurs="unbounded"/>
               <xs:element ref="ConjunctiveLicenseSetAugmentationPoint"
                           minOccurs="0"
                           maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ContainerType">
      <xs:annotation>
         <xs:documentation>A data type for Container type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="Container"
                         xmlname="Container"
                         comment=""
                         rdf="http://www.w3.org/2000/01/rdf-schema#Container"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="structures:ObjectType">
            <xs:sequence>
               <xs:element ref="ContainerAugmentationPoint"
                           minOccurs="0"
                           maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ContextualExampleType">
      <xs:annotation>
         <xs:documentation>A data type for Example for use of the external repository identifier</xs:documentation>
         <xs:appinfo>
            <ComplexType name="contextualExample"
                         xmlname="ContextualExample"
                         comment="Example for use of the external repository identifier"
                         rdf="http://spdx.org/rdf/terms#contextualExample"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="CopyrightTextCodeType">
      <xs:annotation>
         <xs:documentation>A data type for CopyrightText properties</xs:documentation>
         <xs:appinfo>
            <ComplexType name="CopyrightText CodeSimpleType"
                         rdf="http://spdx.org/rdf/terms#copyrightText"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="CopyrightTextCodeSimpleType">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="CopyrightTextType">
      <xs:annotation>
         <xs:documentation>A data type for The text of copyright declarations recited in the Package or File.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="copyrightText"
                         xmlname="CopyrightText"
                         comment="The text of copyright declarations recited in the Package or File."
                         rdf="http://spdx.org/rdf/terms#copyrightText"
                         range="Literal"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="CreatedType">
      <xs:annotation>
         <xs:documentation>A data type for The date and time at which the SpdxDocument was created. This value must in UTC and have 'Z' as its timezone indicator.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="created"
                         xmlname="Created"
                         comment="The date and time at which the SpdxDocument was created. This value must in UTC and have 'Z' as its timezone indicator."
                         rdf="http://spdx.org/rdf/terms#created"
                         domain="CreationInfo"
                         range="DateTime"
                         subpropertyof="Date"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:dateTime">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="CreationInfoType">
      <xs:annotation>
         <xs:documentation>A data type for CreationInfo type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="CreationInfo"
                         xmlname="CreationInfo"
                         comment="A CreationInfo provides information about the individuals, organizations and tools involved in the creation of an SpdxDocument."
                         rdf="http://spdx.org/rdf/terms#CreationInfo"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="structures:ObjectType">
            <xs:sequence>
               <xs:element ref="LicenseListVersion" minOccurs="0"/>
               <xs:element ref="Created" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="Comment" minOccurs="0"/>
               <xs:element ref="Creator" minOccurs="1"/>
               <xs:element ref="CreationInfoAugmentationPoint"
                           minOccurs="0"
                           maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="CreatorType">
      <xs:annotation>
         <xs:documentation>A data type for The name and, optionally, contact information of a person, organization or tool that created, or was used to create, the SpdxDocument. Values of this property must conform to the agent and tool syntax.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="creator"
                         xmlname="Creator"
                         comment="The name and, optionally, contact information of a person, organization or tool that created, or was used to create, the SpdxDocument. Values of this property must conform to the agent and tool syntax."
                         rdf="http://spdx.org/rdf/terms#creator"
                         domain="CreationInfo"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="DateType">
      <xs:annotation>
         <xs:documentation>A data type for A date-time stamp.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="date"
                         xmlname="Date"
                         comment="A date-time stamp."
                         rdf="http://spdx.org/rdf/terms#date"
                         domain="AnnotationCreationInfo"
                         range="DateTime"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:dateTime">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="DescriptionType">
      <xs:annotation>
         <xs:documentation>A data type for Provides a detailed description of the package.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="description"
                         xmlname="Description"
                         comment="Provides a detailed description of the package."
                         rdf="http://spdx.org/rdf/terms#description"
                         domain="Package"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="DisjunctiveLicenseSetType">
      <xs:annotation>
         <xs:documentation>A data type for DisjunctiveLicenseSet type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="DisjunctiveLicenseSet"
                         xmlname="DisjunctiveLicenseSet"
                         comment="A DisjunctiveLicenseSet represents a set of licensing information where only one license applies at a time. This class implies that the recipient gets to choose one of these licenses they would prefer to use."
                         rdf="http://spdx.org/rdf/terms#DisjunctiveLicenseSet"
                         subclassof="AnyLicenseInfo"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="AnyLicenseInfoType">
            <xs:sequence>
               <xs:element ref="Member" minOccurs="2" maxOccurs="unbounded"/>
               <xs:element ref="DisjunctiveLicenseSetAugmentationPoint"
                           minOccurs="0"
                           maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="DocumentationType">
      <xs:annotation>
         <xs:documentation>A data type for Website containing the documentation related to the repository identifier</xs:documentation>
         <xs:appinfo>
            <ComplexType name="documentation"
                         xmlname="Documentation"
                         comment="Website containing the documentation related to the repository identifier"
                         rdf="http://spdx.org/rdf/terms#documentation"
                         range="AnyURI"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:anyURI">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="DownloadLocationCodeType">
      <xs:annotation>
         <xs:documentation>A data type for DownloadLocation properties</xs:documentation>
         <xs:appinfo>
            <ComplexType name="DownloadLocation CodeSimpleType"
                         rdf="http://spdx.org/rdf/terms#downloadLocation"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="DownloadLocationCodeSimpleType">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="DownloadLocationType">
      <xs:annotation>
         <xs:documentation>A data type for The URI at which this package is available for download. Private (i.e., not publicly reachable) URIs are acceptable as values of this property. The values http://spdx.org/rdf/terms#none and http://spdx.org/rdf/terms#noassertion may be used to specify that the package is not downloadable or that no attempt was made to determine its download location, respectively.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="downloadLocation"
                         xmlname="DownloadLocation"
                         comment="The URI at which this package is available for download. Private (i.e., not publicly reachable) URIs are acceptable as values of this property. The values http://spdx.org/rdf/terms#none and http://spdx.org/rdf/terms#noassertion may be used to specify that the package is not downloadable or that no attempt was made to determine its download location, respectively."
                         rdf="http://spdx.org/rdf/terms#downloadLocation"
                         range="AnyURI"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:anyURI">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="ExampleType">
      <xs:annotation>
         <xs:documentation>A data type for Text for examples in describing an SPDX element.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="example"
                         xmlname="Example"
                         comment="Text for examples in describing an SPDX element."
                         rdf="http://spdx.org/rdf/terms#example"
                         domain="LicenseException"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="ExternalDocumentIDType">
      <xs:annotation>
         <xs:documentation>A data type for externalDocumentId is a string containing letters, numbers, “.”, “-” or “+” which uniquely identifies an external document within this document.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="externalDocumentId"
                         xmlname="ExternalDocumentID"
                         comment="externalDocumentId is a string containing letters, numbers, “.”, “-” or “+” which uniquely identifies an external document within this document."
                         rdf="http://spdx.org/rdf/terms#externalDocumentId"
                         domain="ExternalDocumentRef"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="ExternalDocumentRefType">
      <xs:annotation>
         <xs:documentation>A data type for ExternalDocumentRef type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="ExternalDocumentRef"
                         xmlname="ExternalDocumentRef"
                         comment="Information about an external SPDX document reference including the checksum. This allows for verification of the external references."
                         rdf="http://spdx.org/rdf/terms#ExternalDocumentRef"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="structures:ObjectType">
            <xs:sequence>
               <xs:element ref="Checksum" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="ExternalDocumentID" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="SpdxDocument" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="ExternalDocumentRefAugmentationPoint"
                           minOccurs="0"
                           maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ExternalRefType">
      <xs:annotation>
         <xs:documentation>A data type for ExternalRef type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="ExternalRef"
                         xmlname="ExternalRef"
                         comment="An External Reference allows a Package to reference an external source of additional information, metadata, enumerations, asset identifiers, or downloadable content believed to be relevant to the Package."
                         rdf="http://spdx.org/rdf/terms#ExternalRef"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="structures:ObjectType">
            <xs:sequence>
               <xs:element ref="Comment" maxOccurs="1"/>
               <xs:element ref="ReferenceLocator" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="ReferenceID" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="ReferenceCategoryCode"/>
               <xs:element ref="ExternalRefAugmentationPoint"
                           minOccurs="0"
                           maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ExternalReferenceSiteType">
      <xs:annotation>
         <xs:documentation>A data type for Website for the maintainers of the external reference site</xs:documentation>
         <xs:appinfo>
            <ComplexType name="externalReferenceSite"
                         xmlname="ExternalReferenceSite"
                         comment="Website for the maintainers of the external reference site"
                         rdf="http://spdx.org/rdf/terms#externalReferenceSite"
                         range="AnyURI"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:anyURI">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="ExtractedLicenseInfoType">
      <xs:annotation>
         <xs:documentation>A data type for ExtractedLicenseInfo type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="ExtractedLicenseInfo"
                         xmlname="ExtractedLicenseInfo"
                         comment="An ExtractedLicensingInfo represents a license or licensing notice that was found in the package. Any license text that is recognized as a license may be represented as a License rather than an ExtractedLicensingInfo."
                         rdf="http://spdx.org/rdf/terms#ExtractedLicenseInfo"
                         subclassof="SimpleLicensingInfo"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="SimpleLicensingInfoType">
            <xs:sequence>
               <xs:element ref="ExtractedText" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="ExtractedLicenseInfoAugmentationPoint"
                           minOccurs="0"
                           maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ExtractedTextType">
      <xs:annotation>
         <xs:documentation>A data type for Verbatim license or licensing notice text that was discovered.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="extractedText"
                         xmlname="ExtractedText"
                         comment="Verbatim license or licensing notice text that was discovered."
                         rdf="http://spdx.org/rdf/terms#extractedText"
                         domain="ExtractedLicenseInfo"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="FileContributorType">
      <xs:annotation>
         <xs:documentation>A data type for This field provides a place for the SPDX file creator to record file contributors. Contributors could include names of copyright holders and/or authors who may not be copyright holders yet contributed to the file content.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="fileContributor"
                         xmlname="FileContributor"
                         comment="This field provides a place for the SPDX file creator to record file contributors. Contributors could include names of copyright holders and/or authors who may not be copyright holders yet contributed to the file content."
                         rdf="http://spdx.org/rdf/terms#fileContributor"
                         domain="File"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="FileNameType">
      <xs:annotation>
         <xs:documentation>A data type for The name of the file relative to the root of the package.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="fileName"
                         xmlname="FileName"
                         comment="The name of the file relative to the root of the package."
                         rdf="http://spdx.org/rdf/terms#fileName"
                         domain="File"
                         range="String"
                         subpropertyof="Name"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="FileType">
      <xs:annotation>
         <xs:documentation>A data type for File type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="File"
                         xmlname="File"
                         comment="A File represents a named sequence of information that is contained in a software package."
                         rdf="http://spdx.org/rdf/terms#File"
                         disjointwith="Snippet"
                         subclassof="SpdxItem"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="SpdxItemType">
            <xs:sequence>
               <xs:element ref="NoticeText" maxOccurs="1"/>
               <xs:element ref="FileContributor" minOccurs="0"/>
               <xs:element ref="FileName" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="FileTypeCode"/>
               <xs:element ref="Checksum" minOccurs="1"/>
               <xs:element ref="FileAugmentationPoint" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="FileTypeCodeType">
      <xs:annotation>
         <xs:documentation>A data type for FileType properties</xs:documentation>
         <xs:appinfo>
            <ComplexType name="FileType CodeSimpleType" rdf="http://spdx.org/rdf/terms#fileType"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="FileTypeCodeSimpleType">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="FilesAnalyzedType">
      <xs:annotation>
         <xs:documentation>A data type for Indicates whether the file content of this package has been available for or subjected to analysis when creating the SPDX document. If “false” indicates packages that represent metadata or URI references to a project, product, artifact, distribution or a component. If set to “false”, the package must not contain any files.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="filesAnalyzed"
                         xmlname="FilesAnalyzed"
                         comment="Indicates whether the file content of this package has been available for or subjected to analysis when creating the SPDX document. If “false” indicates packages that represent metadata or URI references to a project, product, artifact, distribution or a component. If set to “false”, the package must not contain any files."
                         rdf="http://spdx.org/rdf/terms#filesAnalyzed"
                         range="Boolean"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:boolean">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="HomepageType">
      <xs:annotation>
         <xs:documentation>A data type for Homepage</xs:documentation>
         <xs:appinfo>
            <ComplexType name="homepage"
                         xmlname="Homepage"
                         comment=""
                         rdf="http://usefulinc.com/ns/doap#homepage"
                         range="AnyURI"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:anyURI">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="IsDeprecatedLicenseIdType">
      <xs:annotation>
         <xs:documentation>A data type that indicates if the license id is Deprecated.</xs:documentation>
         <xs:appinfo>
            <Element name="IsDeprecatedLicenseIdType"
                     comment="Indicates if the license is is Deprecated."
                     rdf="http://spdx.org/rdf/terms#isDeprecatedLicenseId"
                     domain="License"
                     range="Boolean"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:boolean">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="IsFsfLibreType">
      <xs:annotation>
         <xs:documentation>A data type to indicate if the license is is FSF Libre.</xs:documentation>
         <xs:appinfo>
            <Element name="IsFsfLibre"
                     comment="Indicates if the license is is FSF Libre."
                     rdf="http://spdx.org/rdf/terms#isFsfLibre"
                     domain="License"
                     range="Boolean"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:boolean">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="IsOsiApprovedType">
      <xs:annotation>
         <xs:documentation>A data type for Indicates if the OSI has approved the license.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="isOsiApproved"
                         xmlname="IsOsiApproved"
                         comment="Indicates if the OSI has approved the license."
                         rdf="http://spdx.org/rdf/terms#isOsiApproved"
                         domain="License"
                         range="Boolean"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:boolean">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="LicenseCommentsType">
      <xs:annotation>
         <xs:documentation>A data type for he licenseComments property allows the preparer of the SPDX document to describe why the licensing in spdx:licenseConcluded was chosen.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="licenseComments"
                         xmlname="LicenseComments"
                         comment="he licenseComments property allows the preparer of the SPDX document to describe why the licensing in spdx:licenseConcluded was chosen."
                         rdf="http://spdx.org/rdf/terms#licenseComments"
                         domain="SpdxItem"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="LicenseConcludedCodeType">
      <xs:annotation>
         <xs:documentation>A data type for LicenseConcluded properties</xs:documentation>
         <xs:appinfo>
            <ComplexType name="LicenseConcluded CodeSimpleType"
                         rdf="http://spdx.org/rdf/terms#licenseConcluded"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="LicenseConcludedCodeSimpleType">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="LicenseDeclaredCodeType">
      <xs:annotation>
         <xs:documentation>A data type for LicenseDeclared properties</xs:documentation>
         <xs:appinfo>
            <ComplexType name="LicenseDeclared CodeSimpleType"
                         rdf="http://spdx.org/rdf/terms#licenseDeclared"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="LicenseDeclaredCodeSimpleType">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="LicenseExceptionIDType">
      <xs:annotation>
         <xs:documentation>A data type for short form license exception identifier in Appendix I.2 of the SPDX specification.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="licenseExceptionId"
                         xmlname="LicenseExceptionID"
                         comment="short form license exception identifier in Appendix I.2 of the SPDX specification."
                         rdf="http://spdx.org/rdf/terms#licenseExceptionId"
                         domain="LicenseException"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="LicenseExceptionTextType">
      <xs:annotation>
         <xs:documentation>A data type for Full text of the license exception.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="licenseExceptionText"
                         xmlname="LicenseExceptionText"
                         comment="Full text of the license exception."
                         rdf="http://spdx.org/rdf/terms#licenseExceptionText"
                         domain="LicenseException"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="LicenseExceptionType">
      <xs:annotation>
         <xs:documentation>A data type for LicenseException type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="LicenseException"
                         xmlname="LicenseException"
                         comment="An exception to a license."
                         rdf="http://spdx.org/rdf/terms#LicenseException"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="structures:ObjectType">
            <xs:sequence>
               <xs:element ref="LicenseExceptionText" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="Comment" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="Example" maxOccurs="1"/>
               <xs:element ref="Name" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="SeeAlso" minOccurs="0"/>
               <xs:element ref="LicenseExceptionID" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="LicenseExceptionAugmentationPoint"
                           minOccurs="0"
                           maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="LicenseIDType">
      <xs:annotation>
         <xs:documentation>A data type for A human readable short form license identifier for a license. The license ID is iether on the standard license oist or the form "LicenseRef-"[idString] where [idString] is a unique string containing letters, numbers, ".", "-" or "+".</xs:documentation>
         <xs:appinfo>
            <ComplexType name="licenseId"
                         xmlname="LicenseID"
                         comment="A human readable short form license identifier for a license. The license ID is iether on the standard license oist or the form &#34;LicenseRef-&#34;[idString] where [idString] is a unique string containing letters, numbers, &#34;.&#34;, &#34;-&#34; or &#34;+&#34;."
                         rdf="http://spdx.org/rdf/terms#licenseId"
                         domain="SimpleLicensingInfo"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="LicenseInfoFromFilesCodeType">
      <xs:annotation>
         <xs:documentation>A data type for LicenseInfoFromFiles properties</xs:documentation>
         <xs:appinfo>
            <ComplexType name="LicenseInfoFromFiles CodeSimpleType"
                         rdf="http://spdx.org/rdf/terms#licenseInfoFromFiles"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="LicenseInfoFromFilesCodeSimpleType">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="LicenseListVersionType">
      <xs:annotation>
         <xs:documentation>A data type for An optional field for creators of the SPDX file to provide the version of the SPDX License List used when the SPDX file was created.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="licenseListVersion"
                         xmlname="LicenseListVersion"
                         comment="An optional field for creators of the SPDX file to provide the version of the SPDX License List used when the SPDX file was created."
                         rdf="http://spdx.org/rdf/terms#licenseListVersion"
                         domain="CreationInfo"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="LicenseTextType">
      <xs:annotation>
         <xs:documentation>A data type for Full text of the license.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="licenseText"
                         xmlname="LicenseText"
                         comment="Full text of the license."
                         rdf="http://spdx.org/rdf/terms#licenseText"
                         domain="License"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="LineCharPointerType">
      <xs:annotation>
         <xs:documentation>A data type for LineCharPointer type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="LineCharPointer"
                         xmlname="LineCharPointer"
                         comment="Single pointer using line and char numbers."
                         rdf="http://www.w3.org/2009/pointers#LineCharPointer"
                         subclassof="OffsetPointer"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="OffsetPointerType">
            <xs:sequence>
               <xs:element ref="LineCharPointerAugmentationPoint"
                           minOccurs="0"
                           maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="LineNumberType">
      <xs:annotation>
         <xs:documentation>A data type for Line number within the reference starting at one.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="lineNumber"
                         xmlname="LineNumber"
                         comment="Line number within the reference starting at one."
                         rdf="http://www.w3.org/2009/pointers#lineNumber"
                         domain="LineCharPointer"
                         range="PositiveInteger"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:positiveInteger">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="ListedLicenseType">
      <xs:annotation>
         <xs:documentation>A data type for ListedLicense type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="ListedLicense"
                         xmlname="ListedLicense"
                         comment="A license which is included in the SPDX License List (http://spdx.org/licenses)."
                         rdf="http://spdx.org/rdf/terms#ListedLicense"
                         subclassof="License"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="LicenseType">
            <xs:sequence>
               <xs:element ref="ListedLicenseAugmentationPoint"
                           minOccurs="0"
                           maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="LocatorFormatType">
      <xs:annotation>
         <xs:documentation>A data type for Regular expression for the format of the external repository identifier</xs:documentation>
         <xs:appinfo>
            <ComplexType name="locatorFormat"
                         xmlname="LocatorFormat"
                         comment="Regular expression for the format of the external repository identifier"
                         rdf="http://spdx.org/rdf/terms#locatorFormat"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="NameType">
      <xs:annotation>
         <xs:documentation>A data type for The full human readable name of the item. This should include version information when applicable.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="name"
                         xmlname="Name"
                         comment="The full human readable name of the item. This should include version information when applicable."
                         rdf="http://spdx.org/rdf/terms#name"
                         domain="SpdxElement"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="NoticeTextType">
      <xs:annotation>
         <xs:documentation>A data type for This field provides a place for the SPDX file creator to record potential legal notices found in the file. This may or may not include copyright statements.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="noticeText"
                         xmlname="NoticeText"
                         comment="This field provides a place for the SPDX file creator to record potential legal notices found in the file. This may or may not include copyright statements."
                         rdf="http://spdx.org/rdf/terms#noticeText"
                         domain="File"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="OffsetPointerType">
      <xs:annotation>
         <xs:documentation>A data type for OffsetPointer type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="OffsetPointer"
                         xmlname="OffsetPointer"
                         comment="Generic single pointer based on an offset."
                         rdf="http://www.w3.org/2009/pointers#OffsetPointer"
                         subclassof="SinglePointer"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="SinglePointerType">
            <xs:sequence>
               <xs:element ref="OffsetPointerAugmentationPoint"
                           minOccurs="0"
                           maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="OffsetType">
      <xs:annotation>
         <xs:documentation>A data type for Offset from the start of the reference.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="offset"
                         xmlname="Offset"
                         comment="Offset from the start of the reference."
                         rdf="http://www.w3.org/2009/pointers#offset"
                         domain="OffsetPointer"
                         range="PositiveInteger"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:positiveInteger">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="OrLaterOperatorType">
      <xs:annotation>
         <xs:documentation>A data type for OrLaterOperator type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="OrLaterOperator"
                         xmlname="OrLaterOperator"
                         comment="A license with an or later operator indicating this license version or any later version of the license (e.g. GPL-2.0+)"
                         rdf="http://spdx.org/rdf/terms#OrLaterOperator"
                         subclassof="AnyLicenseInfo"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="AnyLicenseInfoType">
            <xs:sequence>
               <xs:element ref="Member" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="OrLaterOperatorAugmentationPoint"
                           minOccurs="0"
                           maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="OriginatorType">
      <xs:annotation>
         <xs:documentation>A data type for The name and, optionally, contact information of the person or organization that originally created the package. Values of this property must conform to the agent and tool syntax.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="originator"
                         xmlname="Originator"
                         comment="The name and, optionally, contact information of the person or organization that originally created the package. Values of this property must conform to the agent and tool syntax."
                         rdf="http://spdx.org/rdf/terms#originator"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="PackageFileNameType">
      <xs:annotation>
         <xs:documentation>A data type for The base name of the package file name. For example, zlib-1.2.5.tar.gz.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="packageFileName"
                         xmlname="PackageFileName"
                         comment="The base name of the package file name. For example, zlib-1.2.5.tar.gz."
                         rdf="http://spdx.org/rdf/terms#packageFileName"
                         domain="Package"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="PackageNameType">
      <xs:annotation>
         <xs:documentation>A data type for Identify the full name of the package as given by Package Originator.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="packageName"
                         xmlname="PackageName"
                         comment="Identify the full name of the package as given by Package Originator."
                         rdf="http://spdx.org/rdf/terms#packageName"
                         domain="Package"
                         range="String"
                         subpropertyof="Name"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="PackageType">
      <xs:annotation>
         <xs:documentation>A data type for Package type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="Package"
                         xmlname="Package"
                         comment="A Package represents a collection of software files that are delivered as a single functional component."
                         rdf="http://spdx.org/rdf/terms#Package"
                         subclassof="SpdxItem"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="SpdxItemType">
            <xs:sequence>
               <xs:element ref="ExternalRef" minOccurs="0"/>
               <xs:element ref="PackageFileName" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="FilesAnalyzed" maxOccurs="1"/>
               <xs:element ref="Description" maxOccurs="1"/>
               <xs:element ref="Homepage" maxOccurs="1"/>
               <xs:element ref="Originator" maxOccurs="1"/>
               <xs:element ref="DownloadLocation" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="SourceInfo" maxOccurs="1"/>
               <xs:element ref="Supplier" maxOccurs="1"/>
               <xs:element ref="PackageVerificationCode" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="LicenseDeclaredCode"/>
               <xs:element ref="VersionInfo" maxOccurs="1"/>
               <xs:element ref="Summary" maxOccurs="1"/>
               <xs:element ref="Checksum" maxOccurs="1"/>
               <xs:element ref="PackageAugmentationPoint" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="PackageVerificationCodeType">
      <xs:annotation>
         <xs:documentation>A data type for PackageVerificationCode type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="PackageVerificationCode"
                         xmlname="PackageVerificationCode"
                         comment="A manifest based verification code (the algorithm is defined in section 4.7 of the full specification) of the SPDX Item. This allows consumers of this data and/or database to determine if an SPDX item they have in hand is identical to the SPDX item from which the data was produced. This algorithm works even if the SPDX document is included in the SPDX item."
                         rdf="http://spdx.org/rdf/terms#PackageVerificationCode"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="structures:ObjectType">
            <xs:sequence>
               <xs:element ref="PackageVerificationCodeValue" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="VerificationCodeExcludedFile" minOccurs="0"/>
               <xs:element ref="PackageVerificationCodeAugmentationPoint"
                           minOccurs="0"
                           maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="PackageVerificationCodeValueType">
      <xs:annotation>
         <xs:documentation>A data type for The actual package verification code as a hex encoded value.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="packageVerificationCodeValue"
                         xmlname="PackageVerificationCodeValue"
                         comment="The actual package verification code as a hex encoded value."
                         rdf="http://spdx.org/rdf/terms#packageVerificationCodeValue"
                         domain="PackageVerificationCode"
                         range="HexBinary"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:hexBinary">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="PointerType">
      <xs:annotation>
         <xs:documentation>A data type for Pointer type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="Pointer"
                         xmlname="Pointer"
                         comment="Abstract Pointer to be subclassed for extensibility."
                         rdf="http://www.w3.org/2009/pointers#Pointer"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="structures:ObjectType">
            <xs:sequence>
               <xs:element ref="PointerAugmentationPoint" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ProjectType">
      <xs:annotation>
         <xs:documentation>A data type for Project type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="Project"
                         xmlname="Project"
                         comment=""
                         rdf="http://usefulinc.com/ns/doap#Project"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="structures:ObjectType">
            <xs:sequence>
               <xs:element ref="ProjectAugmentationPoint" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ReferenceCategoryCodeType">
      <xs:annotation>
         <xs:documentation>A data type for ReferenceCategory properties</xs:documentation>
         <xs:appinfo>
            <ComplexType name="ReferenceCategory CodeSimpleType"
                         rdf="http://spdx.org/rdf/terms#referenceCategory"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="ReferenceCategoryCodeSimpleType">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="ReferenceIDType">
      <xs:annotation>
         <xs:documentation>A data type for ReferenceID type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="ReferenceType"
                         xmlname="ReferenceID"
                         comment="Types used to external reference identifiers."
                         rdf="http://spdx.org/rdf/terms#ReferenceType"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="structures:ObjectType">
            <xs:sequence>
               <xs:element ref="ExternalReferenceSite" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="ContextualExample" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="Documentation" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="ReferenceIDAugmentationPoint"
                           minOccurs="0"
                           maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ReferenceLocatorType">
      <xs:annotation>
         <xs:documentation>A data type for The unique string with no spaces necessary to access the package-specific information, metadata, or content within the target location. The format of the locator is subject to constraints defined by the &lt;type&gt;.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="referenceLocator"
                         xmlname="ReferenceLocator"
                         comment="The unique string with no spaces necessary to access the package-specific information, metadata, or content within the target location. The format of the locator is subject to constraints defined by the &lt;type&gt;."
                         rdf="http://spdx.org/rdf/terms#referenceLocator"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="ReferenceType">
      <xs:annotation>
         <xs:documentation>A data type for Scope within which a single pointer operates.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="reference"
                         xmlname="Reference"
                         comment="Scope within which a single pointer operates."
                         rdf="http://www.w3.org/2009/pointers#reference"
                         domain="SinglePointer"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="RelationshipType">
      <xs:annotation>
         <xs:documentation>A data type for Relationship type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="Relationship"
                         xmlname="Relationship"
                         comment="A Relationship represents a relationship between two SpdxElements."
                         rdf="http://spdx.org/rdf/terms#Relationship"
                         subclassof="Thing"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="structures:ObjectType">
            <xs:sequence>
               <xs:element ref="RelationshipTypeCode"/>
               <xs:element ref="Comment" maxOccurs="1"/>
               <xs:element ref="RelatedSpdxElement" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="RelationshipAugmentationPoint"
                           minOccurs="0"
                           maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="RelationshipTypeCodeType">
      <xs:annotation>
         <xs:documentation>A data type for RelationshipType properties</xs:documentation>
         <xs:appinfo>
            <ComplexType name="RelationshipType CodeSimpleType"
                         rdf="http://spdx.org/rdf/terms#relationshipType"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="RelationshipTypeCodeSimpleType">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="SeeAlsoType">
      <xs:annotation>
         <xs:documentation>A data type for rdfs:seeAlso is an instance of rdf:Property that is used to indicate a resource that might provide additional information about the subject resource.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="seeAlso"
                         xmlname="SeeAlso"
                         comment="rdfs:seeAlso is an instance of rdf:Property that is used to indicate a resource that might provide additional information about the subject resource."
                         rdf="http://www.w3.org/2000/01/rdf-schema#seeAlso"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:anyURI">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="SimpleLicensingInfoType">
      <xs:annotation>
         <xs:documentation>A data type for SimpleLicensingInfo type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="SimpleLicenseingInfo"
                         xmlname="SimpleLicensingInfo"
                         comment="The SimpleLicenseInfo class includes all resources that represent simple, atomic, licensing information."
                         rdf="http://spdx.org/rdf/terms#SimpleLicenseingInfo"
                         subclassof="AnyLicenseInfo"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="AnyLicenseInfoType">
            <xs:sequence>
               <xs:element ref="LicenseID" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="Comment" maxOccurs="1"/>
               <xs:element ref="SeeAlso" minOccurs="0"/>
               <xs:element ref="Name" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="SimpleLicensingInfoAugmentationPoint"
                           minOccurs="0"
                           maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="SinglePointerType">
      <xs:annotation>
         <xs:documentation>A data type for SinglePointer type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="SinglePointer"
                         xmlname="SinglePointer"
                         comment="Abstract pointer to a single point to be subclassed for extensibility."
                         rdf="http://www.w3.org/2009/pointers#SinglePointer"
                         subclassof="Pointer"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="PointerType">
            <xs:sequence>
               <xs:element ref="SinglePointerAugmentationPoint"
                           minOccurs="0"
                           maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="SnippetNameType">
      <xs:annotation>
         <xs:documentation>A data type to name specific snippet in a human convenient manner</xs:documentation>
         <xs:appinfo>
            <ComplexType name="snippetName"
                         xmlname="SnippetName"
                         comment="Identify a specific snippet in a human convenient manner."
                         rdf="http://spdx.org/rdf/terms#snippetName"
                         subpropertyof="Name"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="SnippetType">
      <xs:annotation>
         <xs:documentation>A data type for Snippet type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="Snippet"
                         xmlname="Snippet"
                         comment="The set of bytes in a file. The name of the snippet is the name of the file appended with the byte range in parenthesis (ie: &#34;./file/name(2145:5532)&#34;)"
                         rdf="http://spdx.org/rdf/terms#Snippet"
                         subclassof="SpdxItem"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="SpdxItemType">
            <xs:sequence>
               <xs:element ref="SnippetFromFile" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="Range" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="SnippetAugmentationPoint" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="SourceInfoType">
      <xs:annotation>
         <xs:documentation>A data type for Allows the producer(s) of the SPDX document to describe how the package was acquired and/or changed from the original source.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="sourceInfo"
                         xmlname="SourceInfo"
                         comment="Allows the producer(s) of the SPDX document to describe how the package was acquired and/or changed from the original source."
                         rdf="http://spdx.org/rdf/terms#sourceInfo"
                         domain="Package"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="SpdxDocumentType">
      <xs:annotation>
         <xs:documentation>A data type for SpdxDocument type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="SpdxDocument"
                         xmlname="SpdxDocument"
                         comment="An SpdxDocument is a summary of the contents, provenance, ownership and licensing analysis of a specific software package. This is, effectively, the top level of SPDX information."
                         rdf="http://spdx.org/rdf/terms#SpdxDocument"
                         subclassof="SpdxElement"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="SpdxElementType">
            <xs:sequence>
               <xs:element ref="DescribesPackage" minOccurs="0"/>
               <xs:element ref="DescribesFile" minOccurs="0"/>
               <xs:element ref="HasExtractedLicensingInfo" minOccurs="0"/>
               <xs:element ref="CreationInfo" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="SpecVersion" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="ExternalDocumentRef" minOccurs="0"/>
               <xs:element ref="DataLicense"/>
               <xs:element ref="SpdxDocumentAugmentationPoint"
                           minOccurs="0"
                           maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="SpdxElementType">
      <xs:annotation>
         <xs:documentation>A data type for SpdxElement type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="SpdxElement"
                         xmlname="SpdxElement"
                         comment="An SpdxElement is any thing described in SPDX, either a document or an SpdxItem. SpdxElements can be related to other SpdxElements."
                         rdf="http://spdx.org/rdf/terms#SpdxElement"
                         subclassof="Thing"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="structures:ObjectType">
            <xs:sequence>
               <xs:element ref="Annotation" minOccurs="0"/>
               <xs:element ref="Name" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="Comment" maxOccurs="1"/>
               <xs:element ref="Relationship" minOccurs="0"/>
               <xs:element ref="SpdxElementAugmentationPoint"
                           minOccurs="0"
                           maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="SpdxItemType">
      <xs:annotation>
         <xs:documentation>A data type for SpdxItem type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="SpdxItem"
                         xmlname="SpdxItem"
                         comment="An SpdxItem is a potentially copyrightable work."
                         rdf="http://spdx.org/rdf/terms#SpdxItem"
                         subclassof="SpdxElement"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="SpdxElementType">
            <xs:sequence>
               <xs:element ref="LicenseConcludedCode"/>
               <xs:element ref="CopyrightText" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="LicenseInfoFromFiles" minOccurs="1"/>
               <xs:element ref="LicenseComments" maxOccurs="1"/>
               <xs:element ref="SpdxItemAugmentationPoint" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="SpecVersionType">
      <xs:annotation>
         <xs:documentation>A data type for Identifies the version of this specification that was used to produce this SPDX document. The value for this version of the spec is SPDX-1.2. The values SPDX-1.0 and SPDX-1.1 may also be supported by SPDX tools for backwards compatibility purposes.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="specVersion"
                         xmlname="SpecVersion"
                         comment="Identifies the version of this specification that was used to produce this SPDX document. The value for this version of the spec is SPDX-1.2. The values SPDX-1.0 and SPDX-1.1 may also be supported by SPDX tools for backwards compatibility purposes."
                         rdf="http://spdx.org/rdf/terms#specVersion"
                         domain="SpdxDocument"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="StandardLicenseHeaderType">
      <xs:annotation>
         <xs:documentation>A data type for License author's preferred text to indicated that a file is covered by the license.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="standardLicenseHeader"
                         xmlname="StandardLicenseHeader"
                         comment="License author's preferred text to indicated that a file is covered by the license."
                         rdf="http://spdx.org/rdf/terms#standardLicenseHeader"
                         domain="License"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="StandardLicenseTemplateType">
      <xs:annotation>
         <xs:documentation>A data type for License template which describes sections of the license which can be varied. See License Template section of the specification for format information.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="standardLicenseTemplate"
                         xmlname="StandardLicenseTemplate"
                         comment="License template which describes sections of the license which can be varied. See License Template section of the specification for format information."
                         rdf="http://spdx.org/rdf/terms#standardLicenseTemplate"
                         domain="License"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="StartEndPointerType">
      <xs:annotation>
         <xs:documentation>A data type for StartEndPointer type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="StartEndPointer"
                         xmlname="StartEndPointer"
                         comment="Compound pointer to a range with a start and an end point."
                         rdf="http://www.w3.org/2009/pointers#StartEndPointer"
                         subclassof="CompoundPointer"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="CompoundPointerType">
            <xs:sequence>
               <xs:element ref="StartEndPointerAugmentationPoint"
                           minOccurs="0"
                           maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="SummaryType">
      <xs:annotation>
         <xs:documentation>A data type for Provides a short description of the package.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="summary"
                         xmlname="Summary"
                         comment="Provides a short description of the package."
                         rdf="http://spdx.org/rdf/terms#summary"
                         domain="Package"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="SupplierType">
      <xs:annotation>
         <xs:documentation>A data type for The name and, optionally, contact information of the person or organization who was the immediate supplier of this package to the recipient. The supplier may be different than originator when the software has been repackaged. Values of this property must conform to the agent and tool syntax.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="supplier"
                         xmlname="Supplier"
                         comment="The name and, optionally, contact information of the person or organization who was the immediate supplier of this package to the recipient. The supplier may be different than originator when the software has been repackaged. Values of this property must conform to the agent and tool syntax."
                         rdf="http://spdx.org/rdf/terms#supplier"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="VerificationCodeExcludedFileType">
      <xs:annotation>
         <xs:documentation>A data type for A file that was excluded when calculating the package verification code. This is usually a file containing SPDX data regarding the package. If a package contains more than one SPDX file all SPDX files must be excluded from the package verification code. If this is not done it would be impossible to correctly calculate the verification codes in both files.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="verificationCodeExcludedFile"
                         xmlname="VerificationCodeExcludedFile"
                         comment="A file that was excluded when calculating the package verification code. This is usually a file containing SPDX data regarding the package. If a package contains more than one SPDX file all SPDX files must be excluded from the package verification code. If this is not done it would be impossible to correctly calculate the verification codes in both files."
                         rdf="http://spdx.org/rdf/terms#verificationCodeExcludedFile"
                         domain="PackageVerificationCode"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="VersionInfoType">
      <xs:annotation>
         <xs:documentation>A data type for Provides an indication of the version of the package that is described by this SpdxDocument.</xs:documentation>
         <xs:appinfo>
            <ComplexType name="versionInfo"
                         xmlname="VersionInfo"
                         comment="Provides an indication of the version of the package that is described by this SpdxDocument."
                         rdf="http://spdx.org/rdf/terms#versionInfo"
                         domain="Package"
                         range="String"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
   <xs:complexType name="WithExceptionOperatorType">
      <xs:annotation>
         <xs:documentation>A data type for WithExceptionOperator type</xs:documentation>
         <xs:appinfo>
            <ComplexType name="WithExceptionOperator"
                         xmlname="WithExceptionOperator"
                         comment="Sometimes a set of license terms apply except under special circumstances. In this case, use the binary “WITH” operator to construct a new &lt;SPDX-License-Expression&gt; to represent the special exception situation. A valid license expression is where the left operand is a valid &lt;SPDX-License-Expression&gt; value and the right operand is an SPDX License List Exception Identifier (SPDX LL Exception Identifier) that represents the special exception terms. SPDX License LL Identifiers can be found on the SPDX License List. The syntax for the “WITH” operator is: &lt;SPDX-License-Expression-2&gt; = (&lt;SPDX-License-Expression-1&gt; WITH &lt;SPDX-LL-Exception-Identifier&gt;) For example, when the Bison exception is to be applied to GPL-2.0+, the expression would be: (GPL-2.0+ WITH Bison-exception-2.2), where: &lt;SPDX-License-Expression-1&gt; = GPL-2.0+ &lt;SPDX-LL-Exception-Identifier&gt; = Bison-exception-2.2 &lt;SPDX-License-Expression-1&gt; = (GPL-2.0+ WITH Bison-exception-2.2) If the applicable exception is not found on the SPDX License List, then use LicenseRef-[idString] to express the license and exception."
                         rdf="http://spdx.org/rdf/terms#WithExceptionOperator"
                         subclassof="AnyLicenseInfo"/>
         </xs:appinfo>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="AnyLicenseInfoType">
            <xs:sequence>
               <xs:element ref="Member" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="LicenseException" minOccurs="1" maxOccurs="1"/>
               <xs:element ref="WithExceptionOperatorAugmentationPoint"
                           minOccurs="0"
                           maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="AlgorithmCode" type="AlgorithmCodeType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for Algorithm properties</xs:documentation>
         <xs:appinfo>
            <Element name="AlgorithmCode" rdf="http://spdx.org/rdf/terms#algorithm"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="Annotation" type="AnnotationType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for Annotation</xs:documentation>
         <xs:appinfo>
            <Element name="Annotation"
                     xmlname="Annotation"
                     comment="An Annotation is a comment on an SpdxItem by an agent."
                     rdf="http://spdx.org/rdf/terms#Annotation"
                     subclassof="Thing"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="AnnotationAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for Annotation</xs:documentation>
         <xs:appinfo>
            <Element name="Annotation Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="AnnotationDate" type="AnnotationDateType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for Identify when the comment was made. This is to be specified according to the combined date and time in the UTC format, as specified in the ISO 8601 standard.</xs:documentation>
         <xs:appinfo>
            <Element name="annotationDate"
                     xmlname="AnnotationDate"
                     comment="Identify when the comment was made. This is to be specified according to the combined date and time in the UTC format, as specified in the ISO 8601 standard."
                     rdf="http://spdx.org/rdf/terms#annotationDate"
                     domain="Annotation"
                     subpropertyof="Date"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="AnnotationTypeCode"
               type="AnnotationTypeCodeType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for AnnotationType properties</xs:documentation>
         <xs:appinfo>
            <Element name="AnnotationTypeCode"
                     rdf="http://spdx.org/rdf/terms#annotationType"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="Annotator" type="AnnotatorType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for This field identifies the person, organization or tool that has commented on a file, package, or entire document.</xs:documentation>
         <xs:appinfo>
            <Element name="annotator"
                     xmlname="Annotator"
                     comment="This field identifies the person, organization or tool that has commented on a file, package, or entire document."
                     rdf="http://spdx.org/rdf/terms#annotator"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="AnyLicenseInfo" type="AnyLicenseInfoType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for AnyLicenseInfo</xs:documentation>
         <xs:appinfo>
            <Element name="AnyLicenseInfo"
                     xmlname="AnyLicenseInfo"
                     comment="The AnyLicenseInfo class includes all resources that represent licensing information."
                     rdf="http://spdx.org/rdf/terms#AnyLicenseInfo"
                     definedby="AnyLicenseInfo"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="AnyLicenseInfoAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for AnyLicenseInfo</xs:documentation>
         <xs:appinfo>
            <Element name="AnyLicenseInfo Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="ByteOffsetPointer"
               type="ByteOffsetPointerType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for ByteOffsetPointer</xs:documentation>
         <xs:appinfo>
            <Element name="ByteOffsetPointer"
                     xmlname="ByteOffsetPointer"
                     comment="Single pointer using a byte offset from the start of the reference."
                     rdf="http://www.w3.org/2009/pointers#ByteOffsetPointer"
                     subclassof="OffsetPointer"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="ByteOffsetPointerAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for ByteOffsetPointer</xs:documentation>
         <xs:appinfo>
            <Element name="ByteOffsetPointer Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="Checksum" type="ChecksumType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for Checksum</xs:documentation>
         <xs:appinfo>
            <Element name="Checksum"
                     xmlname="Checksum"
                     comment="A Checksum is value that allows the contents of a file to be authenticated. Even small changes to the content of the file will change its checksum. This class allows the results of a variety of checksum and cryptographic message digest algorithms to be represented."
                     rdf="http://spdx.org/rdf/terms#Checksum"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="ChecksumAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for Checksum</xs:documentation>
         <xs:appinfo>
            <Element name="Checksum Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="ChecksumValue" type="ChecksumValueType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for The checksumValue property provides a lower case hexidecimal encoded digest value produced using a specific algorithm.</xs:documentation>
         <xs:appinfo>
            <Element name="checksumValue"
                     xmlname="ChecksumValue"
                     comment="The checksumValue property provides a lower case hexidecimal encoded digest value produced using a specific algorithm."
                     rdf="http://spdx.org/rdf/terms#checksumValue"
                     domain="Checksum"
                     range="HexBinary"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="Comment" type="CommentType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for Comment</xs:documentation>
         <xs:appinfo>
            <Element name="comment"
                     xmlname="Comment"
                     comment=""
                     rdf="http://www.w3.org/2000/01/rdf-schema#comment"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="CompoundPointer" type="CompoundPointerType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for CompoundPointer</xs:documentation>
         <xs:appinfo>
            <Element name="CompoundPointer"
                     xmlname="CompoundPointer"
                     comment="An abstract method made of a pair of pointers to a defined section to be subclassed for extensibility."
                     rdf="http://www.w3.org/2009/pointers#CompoundPointer"
                     subclassof="Pointer"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="CompoundPointerAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for CompoundPointer</xs:documentation>
         <xs:appinfo>
            <Element name="CompoundPointer Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="ConjunctiveLicenseSet"
               type="ConjunctiveLicenseSetType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for ConjunctiveLicenseSet</xs:documentation>
         <xs:appinfo>
            <Element name="ConjunctiveLicenseSet"
                     xmlname="ConjunctiveLicenseSet"
                     comment="A ConjunctiveLicenseSet represents a set of licensing information all of which apply."
                     rdf="http://spdx.org/rdf/terms#ConjunctiveLicenseSet"
                     subclassof="AnyLicenseInfo"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="ConjunctiveLicenseSetAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for ConjunctiveLicenseSet</xs:documentation>
         <xs:appinfo>
            <Element name="ConjunctiveLicenseSet Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="Container" type="ContainerType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for Container</xs:documentation>
         <xs:appinfo>
            <Element name="Container"
                     xmlname="Container"
                     comment=""
                     rdf="http://www.w3.org/2000/01/rdf-schema#Container"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="ContainerAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for Container</xs:documentation>
         <xs:appinfo>
            <Element name="Container Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="ContextualExample"
               type="ContextualExampleType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for Example for use of the external repository identifier</xs:documentation>
         <xs:appinfo>
            <Element name="contextualExample"
                     xmlname="ContextualExample"
                     comment="Example for use of the external repository identifier"
                     rdf="http://spdx.org/rdf/terms#contextualExample"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="CopyrightText" type="CopyrightTextType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for The text of copyright declarations recited in the Package or File.</xs:documentation>
         <xs:appinfo>
            <Element name="copyrightText"
                     xmlname="CopyrightText"
                     comment="The text of copyright declarations recited in the Package or File."
                     rdf="http://spdx.org/rdf/terms#copyrightText"
                     range="Literal"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="CopyrightTextCode"
               type="CopyrightTextCodeType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for CopyrightText properties</xs:documentation>
         <xs:appinfo>
            <Element name="CopyrightTextCode" rdf="http://spdx.org/rdf/terms#copyrightText"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="Created" type="CreatedType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for The date and time at which the SpdxDocument was created. This value must in UTC and have 'Z' as its timezone indicator.</xs:documentation>
         <xs:appinfo>
            <Element name="created"
                     xmlname="Created"
                     comment="The date and time at which the SpdxDocument was created. This value must in UTC and have 'Z' as its timezone indicator."
                     rdf="http://spdx.org/rdf/terms#created"
                     domain="CreationInfo"
                     range="DateTime"
                     subpropertyof="Date"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="CreationInfo" type="CreationInfoType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for CreationInfo</xs:documentation>
         <xs:appinfo>
            <Element name="CreationInfo"
                     xmlname="CreationInfo"
                     comment="A CreationInfo provides information about the individuals, organizations and tools involved in the creation of an SpdxDocument."
                     rdf="http://spdx.org/rdf/terms#CreationInfo"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="CreationInfoAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for CreationInfo</xs:documentation>
         <xs:appinfo>
            <Element name="CreationInfo Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="Creator" type="CreatorType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for The name and, optionally, contact information of a person, organization or tool that created, or was used to create, the SpdxDocument. Values of this property must conform to the agent and tool syntax.</xs:documentation>
         <xs:appinfo>
            <Element name="creator"
                     xmlname="Creator"
                     comment="The name and, optionally, contact information of a person, organization or tool that created, or was used to create, the SpdxDocument. Values of this property must conform to the agent and tool syntax."
                     rdf="http://spdx.org/rdf/terms#creator"
                     domain="CreationInfo"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="DataLicense" type="LicenseIDType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for The licensing under which the creator of this SPDX document allows related data to be reproduced. The only valid value for this property is http://spdx.org/licenses/CC0-1.0. This is to alleviate any concern that content (the data) in an SPDX file is subject to any form of intellectual property right that could restrict the re-use of the information or the creation of another SPDX file for the same project(s). This approach avoids intellectual property and related restrictions over the SPDX file, however individuals can still contract one to one to restrict release of specific collections of SPDX files (which map to software bill of materials) and the identification of the supplier of SPDX files.</xs:documentation>
         <xs:appinfo>
            <Element name="dataLicense"
                     xmlname="DataLicense"
                     comment="The licensing under which the creator of this SPDX document allows related data to be reproduced. The only valid value for this property is http://spdx.org/licenses/CC0-1.0. This is to alleviate any concern that content (the data) in an SPDX file is subject to any form of intellectual property right that could restrict the re-use of the information or the creation of another SPDX file for the same project(s). This approach avoids intellectual property and related restrictions over the SPDX file, however individuals can still contract one to one to restrict release of specific collections of SPDX files (which map to software bill of materials) and the identification of the supplier of SPDX files."
                     rdf="http://spdx.org/rdf/terms#dataLicense"
                     domain="SpdxDocument"
                     type="FunctionalProperty"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="Date" type="DateType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for A date-time stamp.</xs:documentation>
         <xs:appinfo>
            <Element name="date"
                     xmlname="Date"
                     comment="A date-time stamp."
                     rdf="http://spdx.org/rdf/terms#date"
                     domain="AnnotationCreationInfo"
                     range="DateTime"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="DescribesFile" type="SpdxDocumentType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for The describesFile property relates an SpdxDocument to the file which it describes.</xs:documentation>
         <xs:appinfo>
            <Element name="describesFile"
                     xmlname="DescribesFile"
                     comment="The describesFile property relates an SpdxDocument to the file which it describes."
                     rdf="http://spdx.org/rdf/terms#describesFile"
                     domain="SpdxDocument"
                     range="File"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="DescribesPackage" type="SpdxDocumentType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for The describesPackage property relates an SpdxDocument to the package which it describes.</xs:documentation>
         <xs:appinfo>
            <Element name="describesPackage"
                     xmlname="DescribesPackage"
                     comment="The describesPackage property relates an SpdxDocument to the package which it describes."
                     rdf="http://spdx.org/rdf/terms#describesPackage"
                     domain="SpdxDocument"
                     range="Package"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="Description" type="DescriptionType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for Provides a detailed description of the package.</xs:documentation>
         <xs:appinfo>
            <Element name="description"
                     xmlname="Description"
                     comment="Provides a detailed description of the package."
                     rdf="http://spdx.org/rdf/terms#description"
                     domain="Package"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="DisjunctiveLicenseSet"
               type="DisjunctiveLicenseSetType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for DisjunctiveLicenseSet</xs:documentation>
         <xs:appinfo>
            <Element name="DisjunctiveLicenseSet"
                     xmlname="DisjunctiveLicenseSet"
                     comment="A DisjunctiveLicenseSet represents a set of licensing information where only one license applies at a time. This class implies that the recipient gets to choose one of these licenses they would prefer to use."
                     rdf="http://spdx.org/rdf/terms#DisjunctiveLicenseSet"
                     subclassof="AnyLicenseInfo"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="DisjunctiveLicenseSetAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for DisjunctiveLicenseSet</xs:documentation>
         <xs:appinfo>
            <Element name="DisjunctiveLicenseSet Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="Documentation" type="DocumentationType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for Website containing the documentation related to the repository identifier</xs:documentation>
         <xs:appinfo>
            <Element name="documentation"
                     xmlname="Documentation"
                     comment="Website containing the documentation related to the repository identifier"
                     rdf="http://spdx.org/rdf/terms#documentation"
                     range="AnyURI"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="DownloadLocation" type="DownloadLocationType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for The URI at which this package is available for download. Private (i.e., not publicly reachable) URIs are acceptable as values of this property. The values http://spdx.org/rdf/terms#none and http://spdx.org/rdf/terms#noassertion may be used to specify that the package is not downloadable or that no attempt was made to determine its download location, respectively.</xs:documentation>
         <xs:appinfo>
            <Element name="downloadLocation"
                     xmlname="DownloadLocation"
                     comment="The URI at which this package is available for download. Private (i.e., not publicly reachable) URIs are acceptable as values of this property. The values http://spdx.org/rdf/terms#none and http://spdx.org/rdf/terms#noassertion may be used to specify that the package is not downloadable or that no attempt was made to determine its download location, respectively."
                     rdf="http://spdx.org/rdf/terms#downloadLocation"
                     range="AnyURI"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="DownloadLocationCode"
               type="DownloadLocationCodeType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for DownloadLocation properties</xs:documentation>
         <xs:appinfo>
            <Element name="DownloadLocationCode"
                     rdf="http://spdx.org/rdf/terms#downloadLocation"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="EndPointer" type="PointerType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for Pointer to the end point of the range.</xs:documentation>
         <xs:appinfo>
            <Element name="endPointer"
                     xmlname="EndPointer"
                     comment="Pointer to the end point of the range."
                     rdf="http://www.w3.org/2009/pointers#endPointer"
                     domain="CompoundPointer"
                     range="SinglePointer"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="Example" type="ExampleType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for Text for examples in describing an SPDX element.</xs:documentation>
         <xs:appinfo>
            <Element name="example"
                     xmlname="Example"
                     comment="Text for examples in describing an SPDX element."
                     rdf="http://spdx.org/rdf/terms#example"
                     domain="LicenseException"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="ExternalDocumentID"
               type="ExternalDocumentIDType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for externalDocumentId is a string containing letters, numbers, “.”, “-” or “+” which uniquely identifies an external document within this document.</xs:documentation>
         <xs:appinfo>
            <Element name="externalDocumentId"
                     xmlname="ExternalDocumentID"
                     comment="externalDocumentId is a string containing letters, numbers, “.”, “-” or “+” which uniquely identifies an external document within this document."
                     rdf="http://spdx.org/rdf/terms#externalDocumentId"
                     domain="ExternalDocumentRef"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="ExternalDocumentRef"
               type="ExternalDocumentRefType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for ExternalDocumentRef</xs:documentation>
         <xs:appinfo>
            <Element name="ExternalDocumentRef"
                     xmlname="ExternalDocumentRef"
                     comment="Information about an external SPDX document reference including the checksum. This allows for verification of the external references."
                     rdf="http://spdx.org/rdf/terms#ExternalDocumentRef"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="ExternalDocumentRefAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for ExternalDocumentRef</xs:documentation>
         <xs:appinfo>
            <Element name="ExternalDocumentRef Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="ExternalRef" type="ExternalRefType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for ExternalRef</xs:documentation>
         <xs:appinfo>
            <Element name="ExternalRef"
                     xmlname="ExternalRef"
                     comment="An External Reference allows a Package to reference an external source of additional information, metadata, enumerations, asset identifiers, or downloadable content believed to be relevant to the Package."
                     rdf="http://spdx.org/rdf/terms#ExternalRef"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="ExternalRefAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for ExternalRef</xs:documentation>
         <xs:appinfo>
            <Element name="ExternalRef Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="ExternalReferenceSite"
               type="ExternalReferenceSiteType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for Website for the maintainers of the external reference site</xs:documentation>
         <xs:appinfo>
            <Element name="externalReferenceSite"
                     xmlname="ExternalReferenceSite"
                     comment="Website for the maintainers of the external reference site"
                     rdf="http://spdx.org/rdf/terms#externalReferenceSite"
                     range="AnyURI"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="ExtractedLicenseInfo"
               type="ExtractedLicenseInfoType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for ExtractedLicenseInfo</xs:documentation>
         <xs:appinfo>
            <Element name="ExtractedLicenseInfo"
                     xmlname="ExtractedLicenseInfo"
                     comment="An ExtractedLicensingInfo represents a license or licensing notice that was found in the package. Any license text that is recognized as a license may be represented as a License rather than an ExtractedLicensingInfo."
                     rdf="http://spdx.org/rdf/terms#ExtractedLicenseInfo"
                     subclassof="SimpleLicensingInfo"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="ExtractedLicenseInfoAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for ExtractedLicenseInfo</xs:documentation>
         <xs:appinfo>
            <Element name="ExtractedLicenseInfo Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="ExtractedText" type="ExtractedTextType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for Verbatim license or licensing notice text that was discovered.</xs:documentation>
         <xs:appinfo>
            <Element name="extractedText"
                     xmlname="ExtractedText"
                     comment="Verbatim license or licensing notice text that was discovered."
                     rdf="http://spdx.org/rdf/terms#extractedText"
                     domain="ExtractedLicenseInfo"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="File" type="FileType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for File</xs:documentation>
         <xs:appinfo>
            <Element name="File"
                     xmlname="File"
                     comment="A File represents a named sequence of information that is contained in a software package."
                     rdf="http://spdx.org/rdf/terms#File"
                     disjointwith="Snippet"
                     subclassof="SpdxItem"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="FileAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for File</xs:documentation>
         <xs:appinfo>
            <Element name="File Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="FileContributor" type="FileContributorType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for This field provides a place for the SPDX file creator to record file contributors. Contributors could include names of copyright holders and/or authors who may not be copyright holders yet contributed to the file content.</xs:documentation>
         <xs:appinfo>
            <Element name="fileContributor"
                     xmlname="FileContributor"
                     comment="This field provides a place for the SPDX file creator to record file contributors. Contributors could include names of copyright holders and/or authors who may not be copyright holders yet contributed to the file content."
                     rdf="http://spdx.org/rdf/terms#fileContributor"
                     domain="File"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="FileName" type="FileNameType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for The name of the file relative to the root of the package.</xs:documentation>
         <xs:appinfo>
            <Element name="fileName"
                     xmlname="FileName"
                     comment="The name of the file relative to the root of the package."
                     rdf="http://spdx.org/rdf/terms#fileName"
                     domain="File"
                     range="String"
                     subpropertyof="Name"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="FileTypeCode" type="FileTypeCodeType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for FileType properties</xs:documentation>
         <xs:appinfo>
            <Element name="FileTypeCode" rdf="http://spdx.org/rdf/terms#fileType"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="FilesAnalyzed" type="FilesAnalyzedType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for Indicates whether the file content of this package has been available for or subjected to analysis when creating the SPDX document. If “false” indicates packages that represent metadata or URI references to a project, product, artifact, distribution or a component. If set to “false”, the package must not contain any files.</xs:documentation>
         <xs:appinfo>
            <Element name="filesAnalyzed"
                     xmlname="FilesAnalyzed"
                     comment="Indicates whether the file content of this package has been available for or subjected to analysis when creating the SPDX document. If “false” indicates packages that represent metadata or URI references to a project, product, artifact, distribution or a component. If set to “false”, the package must not contain any files."
                     rdf="http://spdx.org/rdf/terms#filesAnalyzed"
                     range="Boolean"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="HasExtractedLicensingInfo"
               type="SpdxDocumentType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for Indicates that a particular ExtractedLicensingInfo was defined in the subject SpdxDocument.</xs:documentation>
         <xs:appinfo>
            <Element name="hasExtractedLicensingInfo"
                     xmlname="HasExtractedLicensingInfo"
                     comment="Indicates that a particular ExtractedLicensingInfo was defined in the subject SpdxDocument."
                     rdf="http://spdx.org/rdf/terms#hasExtractedLicensingInfo"
                     domain="ExtractedLicenseInfoSpdxDocument"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="HasFile" type="PackageType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for Indicates that a particular file belongs to a package.</xs:documentation>
         <xs:appinfo>
            <Element name="hasFile"
                     xmlname="HasFile"
                     comment="Indicates that a particular file belongs to a package."
                     rdf="http://spdx.org/rdf/terms#hasFile"
                     domain="Package"
                     range="File"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="Homepage" type="HomepageType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for Homepage</xs:documentation>
         <xs:appinfo>
            <Element name="homepage"
                     xmlname="Homepage"
                     comment=""
                     rdf="http://usefulinc.com/ns/doap#homepage"
                     range="AnyURI"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="IsDeprecatedLicenseId"
               type="IsDeprecatedLicenseIdType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data item that indicates if the license id is Deprecated.</xs:documentation>
         <xs:appinfo>
            <Element name="IsDeprecatedLicenseId"
                     comment="Indicates if the license id is Deprecated."
                     rdf="http://spdx.org/rdf/terms#isDeprecatedLicenseId"
                     domain="License"
                     range="Boolean"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="IsFsfLibre" type="IsFsfLibreType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item to indicate if the license is FSF Libre.</xs:documentation>
         <xs:appinfo>
            <Element name="IsFsfLibre"
                     comment="Indicates if the license is is FSF Libre."
                     rdf="http://spdx.org/rdf/terms#isFsfLibre"
                     domain="License"
                     range="Boolean"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="IsOsiApproved" type="IsOsiApprovedType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for Indicates if the OSI has approved the license.</xs:documentation>
         <xs:appinfo>
            <Element name="isOsiApproved"
                     xmlname="IsOsiApproved"
                     comment="Indicates if the OSI has approved the license."
                     rdf="http://spdx.org/rdf/terms#isOsiApproved"
                     domain="License"
                     range="Boolean"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="License" type="LicenseType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for License</xs:documentation>
         <xs:appinfo>
            <Element name="License"
                     xmlname="License"
                     comment="A License represents a copyright license. The SPDX license list website is annotated with these properties (using RDFa) to allow license data published there to be easily processed. The license list is populated in accordance with the License List fields guidelines. These guidelines are not normative and may change over time. SPDX tooling should not rely on values in the license list conforming to the current guidelines."
                     rdf="http://spdx.org/rdf/terms#License"
                     subclassof="SimpleLicensingInfo"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="LicenseAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for License</xs:documentation>
         <xs:appinfo>
            <Element name="License Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="LicenseComments" type="LicenseCommentsType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for he licenseComments property allows the preparer of the SPDX document to describe why the licensing in spdx:licenseConcluded was chosen.</xs:documentation>
         <xs:appinfo>
            <Element name="licenseComments"
                     xmlname="LicenseComments"
                     comment="he licenseComments property allows the preparer of the SPDX document to describe why the licensing in spdx:licenseConcluded was chosen."
                     rdf="http://spdx.org/rdf/terms#licenseComments"
                     domain="SpdxItem"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="LicenseConcludedCode"
               type="LicenseConcludedCodeType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for LicenseConcluded properties</xs:documentation>
         <xs:appinfo>
            <Element name="LicenseConcludedCode"
                     rdf="http://spdx.org/rdf/terms#licenseConcluded"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="LicenseDeclared" type="SpdxItemType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for The licensing that the creators of the software in the package, or the packager, have declared. Declarations by the original software creator should be preferred, if they exist.</xs:documentation>
         <xs:appinfo>
            <Element name="licenseDeclared"
                     xmlname="LicenseDeclared"
                     comment="The licensing that the creators of the software in the package, or the packager, have declared. Declarations by the original software creator should be preferred, if they exist."
                     rdf="http://spdx.org/rdf/terms#licenseDeclared"
                     domain="SpdxItem"
                     range="AnyLicenseInfo"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="LicenseDeclaredCode"
               type="LicenseDeclaredCodeType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for LicenseDeclared properties</xs:documentation>
         <xs:appinfo>
            <Element name="LicenseDeclaredCode"
                     rdf="http://spdx.org/rdf/terms#licenseDeclared"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="LicenseException" type="LicenseExceptionType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for LicenseException</xs:documentation>
         <xs:appinfo>
            <Element name="LicenseException"
                     xmlname="LicenseException"
                     comment="An exception to a license."
                     rdf="http://spdx.org/rdf/terms#LicenseException"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="LicenseExceptionAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for LicenseException</xs:documentation>
         <xs:appinfo>
            <Element name="LicenseException Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="LicenseExceptionID"
               type="LicenseExceptionIDType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for short form license exception identifier in Appendix I.2 of the SPDX specification.</xs:documentation>
         <xs:appinfo>
            <Element name="licenseExceptionId"
                     xmlname="LicenseExceptionID"
                     comment="short form license exception identifier in Appendix I.2 of the SPDX specification."
                     rdf="http://spdx.org/rdf/terms#licenseExceptionId"
                     domain="LicenseException"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="LicenseExceptionText"
               type="LicenseExceptionTextType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for Full text of the license exception.</xs:documentation>
         <xs:appinfo>
            <Element name="licenseExceptionText"
                     xmlname="LicenseExceptionText"
                     comment="Full text of the license exception."
                     rdf="http://spdx.org/rdf/terms#licenseExceptionText"
                     domain="LicenseException"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="LicenseID" type="LicenseIDType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for A human readable short form license identifier for a license. The license ID is iether on the standard license oist or the form "LicenseRef-"[idString] where [idString] is a unique string containing letters, numbers, ".", "-" or "+".</xs:documentation>
         <xs:appinfo>
            <Element name="licenseId"
                     xmlname="LicenseID"
                     comment="A human readable short form license identifier for a license. The license ID is iether on the standard license oist or the form &#34;LicenseRef-&#34;[idString] where [idString] is a unique string containing letters, numbers, &#34;.&#34;, &#34;-&#34; or &#34;+&#34;."
                     rdf="http://spdx.org/rdf/terms#licenseId"
                     domain="SimpleLicensingInfo"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="LicenseInfoFromFiles" type="PackageType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for The licensing information that was discovered directly within the package. There will be an instance of this property for each distinct value of alllicenseInfoInFile properties of all files contained in the package.</xs:documentation>
         <xs:appinfo>
            <Element name="licenseInfoFromFiles"
                     xmlname="LicenseInfoFromFiles"
                     comment="The licensing information that was discovered directly within the package. There will be an instance of this property for each distinct value of alllicenseInfoInFile properties of all files contained in the package."
                     rdf="http://spdx.org/rdf/terms#licenseInfoFromFiles"
                     domain="Package"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="LicenseInfoFromFilesCode"
               type="LicenseInfoFromFilesCodeType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for LicenseInfoFromFiles properties</xs:documentation>
         <xs:appinfo>
            <Element name="LicenseInfoFromFilesCode"
                     rdf="http://spdx.org/rdf/terms#licenseInfoFromFiles"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="LicenseListVersion"
               type="LicenseListVersionType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for An optional field for creators of the SPDX file to provide the version of the SPDX License List used when the SPDX file was created.</xs:documentation>
         <xs:appinfo>
            <Element name="licenseListVersion"
                     xmlname="LicenseListVersion"
                     comment="An optional field for creators of the SPDX file to provide the version of the SPDX License List used when the SPDX file was created."
                     rdf="http://spdx.org/rdf/terms#licenseListVersion"
                     domain="CreationInfo"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="LicenseText" type="LicenseTextType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for Full text of the license.</xs:documentation>
         <xs:appinfo>
            <Element name="licenseText"
                     xmlname="LicenseText"
                     comment="Full text of the license."
                     rdf="http://spdx.org/rdf/terms#licenseText"
                     domain="License"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="LineCharPointer" type="LineCharPointerType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for LineCharPointer</xs:documentation>
         <xs:appinfo>
            <Element name="LineCharPointer"
                     xmlname="LineCharPointer"
                     comment="Single pointer using line and char numbers."
                     rdf="http://www.w3.org/2009/pointers#LineCharPointer"
                     subclassof="OffsetPointer"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="LineCharPointerAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for LineCharPointer</xs:documentation>
         <xs:appinfo>
            <Element name="LineCharPointer Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="LineNumber" type="LineNumberType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for Line number within the reference starting at one.</xs:documentation>
         <xs:appinfo>
            <Element name="lineNumber"
                     xmlname="LineNumber"
                     comment="Line number within the reference starting at one."
                     rdf="http://www.w3.org/2009/pointers#lineNumber"
                     domain="LineCharPointer"
                     range="PositiveInteger"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="ListedLicense" type="ListedLicenseType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for ListedLicense</xs:documentation>
         <xs:appinfo>
            <Element name="ListedLicense"
                     xmlname="ListedLicense"
                     comment="A license which is included in the SPDX License List (http://spdx.org/licenses)."
                     rdf="http://spdx.org/rdf/terms#ListedLicense"
                     subclassof="License"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="ListedLicenseAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for ListedLicense</xs:documentation>
         <xs:appinfo>
            <Element name="ListedLicense Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="LocatorFormat" type="LocatorFormatType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for Regular expression for the format of the external repository identifier</xs:documentation>
         <xs:appinfo>
            <Element name="locatorFormat"
                     xmlname="LocatorFormat"
                     comment="Regular expression for the format of the external repository identifier"
                     rdf="http://spdx.org/rdf/terms#locatorFormat"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="Member" type="AnyLicenseInfoType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for A license, or other licensing information, that is a member of the subject license set.</xs:documentation>
         <xs:appinfo>
            <Element name="member"
                     xmlname="Member"
                     comment="A license, or other licensing information, that is a member of the subject license set."
                     rdf="http://spdx.org/rdf/terms#member"
                     range="AnyLicenseInfo"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="Name" type="NameType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for The full human readable name of the item. This should include version information when applicable.</xs:documentation>
         <xs:appinfo>
            <Element name="name"
                     xmlname="Name"
                     comment="The full human readable name of the item. This should include version information when applicable."
                     rdf="http://spdx.org/rdf/terms#name"
                     domain="SpdxElement"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="NoticeText" type="NoticeTextType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for This field provides a place for the SPDX file creator to record potential legal notices found in the file. This may or may not include copyright statements.</xs:documentation>
         <xs:appinfo>
            <Element name="noticeText"
                     xmlname="NoticeText"
                     comment="This field provides a place for the SPDX file creator to record potential legal notices found in the file. This may or may not include copyright statements."
                     rdf="http://spdx.org/rdf/terms#noticeText"
                     domain="File"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="Offset" type="OffsetType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for Offset from the start of the reference.</xs:documentation>
         <xs:appinfo>
            <Element name="offset"
                     xmlname="Offset"
                     comment="Offset from the start of the reference."
                     rdf="http://www.w3.org/2009/pointers#offset"
                     domain="OffsetPointer"
                     range="PositiveInteger"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="OffsetPointer" type="OffsetPointerType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for OffsetPointer</xs:documentation>
         <xs:appinfo>
            <Element name="OffsetPointer"
                     xmlname="OffsetPointer"
                     comment="Generic single pointer based on an offset."
                     rdf="http://www.w3.org/2009/pointers#OffsetPointer"
                     subclassof="SinglePointer"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="OffsetPointerAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for OffsetPointer</xs:documentation>
         <xs:appinfo>
            <Element name="OffsetPointer Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="OrLaterOperator" type="OrLaterOperatorType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for OrLaterOperator</xs:documentation>
         <xs:appinfo>
            <Element name="OrLaterOperator"
                     xmlname="OrLaterOperator"
                     comment="A license with an or later operator indicating this license version or any later version of the license (e.g. GPL-2.0+)"
                     rdf="http://spdx.org/rdf/terms#OrLaterOperator"
                     subclassof="AnyLicenseInfo"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="OrLaterOperatorAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for OrLaterOperator</xs:documentation>
         <xs:appinfo>
            <Element name="OrLaterOperator Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="Originator" type="OriginatorType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for The name and, optionally, contact information of the person or organization that originally created the package. Values of this property must conform to the agent and tool syntax.</xs:documentation>
         <xs:appinfo>
            <Element name="originator"
                     xmlname="Originator"
                     comment="The name and, optionally, contact information of the person or organization that originally created the package. Values of this property must conform to the agent and tool syntax."
                     rdf="http://spdx.org/rdf/terms#originator"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="Package" type="PackageType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for Package</xs:documentation>
         <xs:appinfo>
            <Element name="Package"
                     xmlname="Package"
                     comment="A Package represents a collection of software files that are delivered as a single functional component."
                     rdf="http://spdx.org/rdf/terms#Package"
                     subclassof="SpdxItem"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="PackageAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for Package</xs:documentation>
         <xs:appinfo>
            <Element name="Package Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="PackageFileName" type="PackageFileNameType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for The base name of the package file name. For example, zlib-1.2.5.tar.gz.</xs:documentation>
         <xs:appinfo>
            <Element name="packageFileName"
                     xmlname="PackageFileName"
                     comment="The base name of the package file name. For example, zlib-1.2.5.tar.gz."
                     rdf="http://spdx.org/rdf/terms#packageFileName"
                     domain="Package"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="PackageName" type="PackageNameType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for Identify the full name of the package as given by Package Originator.</xs:documentation>
         <xs:appinfo>
            <Element name="packageName"
                     xmlname="PackageName"
                     comment="Identify the full name of the package as given by Package Originator."
                     rdf="http://spdx.org/rdf/terms#packageName"
                     domain="Package"
                     range="String"
                     subpropertyof="Name"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="PackageVerificationCode"
               type="PackageVerificationCodeType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for PackageVerificationCode</xs:documentation>
         <xs:appinfo>
            <Element name="PackageVerificationCode"
                     xmlname="PackageVerificationCode"
                     comment="A manifest based verification code (the algorithm is defined in section 4.7 of the full specification) of the SPDX Item. This allows consumers of this data and/or database to determine if an SPDX item they have in hand is identical to the SPDX item from which the data was produced. This algorithm works even if the SPDX document is included in the SPDX item."
                     rdf="http://spdx.org/rdf/terms#PackageVerificationCode"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="PackageVerificationCodeAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for PackageVerificationCode</xs:documentation>
         <xs:appinfo>
            <Element name="PackageVerificationCode Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="PackageVerificationCodeValue"
               type="PackageVerificationCodeValueType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for The actual package verification code as a hex encoded value.</xs:documentation>
         <xs:appinfo>
            <Element name="packageVerificationCodeValue"
                     xmlname="PackageVerificationCodeValue"
                     comment="The actual package verification code as a hex encoded value."
                     rdf="http://spdx.org/rdf/terms#packageVerificationCodeValue"
                     domain="PackageVerificationCode"
                     range="HexBinary"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="Pointer" type="PointerType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for Pointer</xs:documentation>
         <xs:appinfo>
            <Element name="Pointer"
                     xmlname="Pointer"
                     comment="Abstract Pointer to be subclassed for extensibility."
                     rdf="http://www.w3.org/2009/pointers#Pointer"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="PointerAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for Pointer</xs:documentation>
         <xs:appinfo>
            <Element name="Pointer Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="Project" type="ProjectType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for Project</xs:documentation>
         <xs:appinfo>
            <Element name="Project"
                     xmlname="Project"
                     comment=""
                     rdf="http://usefulinc.com/ns/doap#Project"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="ProjectAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for Project</xs:documentation>
         <xs:appinfo>
            <Element name="Project Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="Range" type="SnippetType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for This field defines the byte range in the original host file (in X.2) that the snippet information applies to</xs:documentation>
         <xs:appinfo>
            <Element name="range"
                     xmlname="Range"
                     comment="This field defines the byte range in the original host file (in X.2) that the snippet information applies to"
                     rdf="http://spdx.org/rdf/terms#range"
                     domain="Snippet"
                     range="CompoundPointer"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="Reference" type="PointerType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for Scope within which a single pointer operates.</xs:documentation>
         <xs:appinfo>
            <Element name="reference"
                     xmlname="Reference"
                     comment="Scope within which a single pointer operates."
                     rdf="http://www.w3.org/2009/pointers#reference"
                     domain="SinglePointer"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="ReferenceCategoryCode"
               type="ReferenceCategoryCodeType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for ReferenceCategory properties</xs:documentation>
         <xs:appinfo>
            <Element name="ReferenceCategoryCode"
                     rdf="http://spdx.org/rdf/terms#referenceCategory"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="ReferenceID" type="ReferenceIDType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for ReferenceID</xs:documentation>
         <xs:appinfo>
            <Element name="ReferenceType"
                     xmlname="ReferenceID"
                     comment="Types used to external reference identifiers."
                     rdf="http://spdx.org/rdf/terms#ReferenceType"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="ReferenceIDAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for ReferenceID</xs:documentation>
         <xs:appinfo>
            <Element name="ReferenceID Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="ReferenceLocator" type="ReferenceLocatorType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for The unique string with no spaces necessary to access the package-specific information, metadata, or content within the target location. The format of the locator is subject to constraints defined by the &lt;type&gt;.</xs:documentation>
         <xs:appinfo>
            <Element name="referenceLocator"
                     xmlname="ReferenceLocator"
                     comment="The unique string with no spaces necessary to access the package-specific information, metadata, or content within the target location. The format of the locator is subject to constraints defined by the &lt;type&gt;."
                     rdf="http://spdx.org/rdf/terms#referenceLocator"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="RelatedSpdxElement" type="RelationshipType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for A related SpdxElement.</xs:documentation>
         <xs:appinfo>
            <Element name="relatedSpdxElement"
                     xmlname="RelatedSpdxElement"
                     comment="A related SpdxElement."
                     rdf="http://spdx.org/rdf/terms#relatedSpdxElement"
                     domain="Relationship"
                     range="SpdxElement"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="Relationship" type="RelationshipType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for Relationship</xs:documentation>
         <xs:appinfo>
            <Element name="Relationship"
                     xmlname="Relationship"
                     comment="A Relationship represents a relationship between two SpdxElements."
                     rdf="http://spdx.org/rdf/terms#Relationship"
                     subclassof="Thing"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="RelationshipAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for Relationship</xs:documentation>
         <xs:appinfo>
            <Element name="Relationship Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="RelationshipTypeCode"
               type="RelationshipTypeCodeType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for RelationshipType properties</xs:documentation>
         <xs:appinfo>
            <Element name="RelationshipTypeCode"
                     rdf="http://spdx.org/rdf/terms#relationshipType"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="SeeAlso" type="SeeAlsoType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for rdfs:seeAlso is an instance of rdf:Property that is used to indicate a resource that might provide additional information about the subject resource.</xs:documentation>
         <xs:appinfo>
            <Element name="seeAlso"
                     xmlname="SeeAlso"
                     comment="rdfs:seeAlso is an instance of rdf:Property that is used to indicate a resource that might provide additional information about the subject resource."
                     rdf="http://www.w3.org/2000/01/rdf-schema#seeAlso"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="SimpleLicensingInfo"
               type="SimpleLicensingInfoType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for SimpleLicensingInfo</xs:documentation>
         <xs:appinfo>
            <Element name="SimpleLicenseingInfo"
                     xmlname="SimpleLicensingInfo"
                     comment="The SimpleLicenseInfo class includes all resources that represent simple, atomic, licensing information."
                     rdf="http://spdx.org/rdf/terms#SimpleLicenseingInfo"
                     subclassof="AnyLicenseInfo"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="SimpleLicensingInfoAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for SimpleLicensingInfo</xs:documentation>
         <xs:appinfo>
            <Element name="SimpleLicensingInfo Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="SinglePointer" type="SinglePointerType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for SinglePointer</xs:documentation>
         <xs:appinfo>
            <Element name="SinglePointer"
                     xmlname="SinglePointer"
                     comment="Abstract pointer to a single point to be subclassed for extensibility."
                     rdf="http://www.w3.org/2009/pointers#SinglePointer"
                     subclassof="Pointer"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="SinglePointerAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for SinglePointer</xs:documentation>
         <xs:appinfo>
            <Element name="SinglePointer Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="Snippet" type="SnippetType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for Snippet</xs:documentation>
         <xs:appinfo>
            <Element name="Snippet"
                     xmlname="Snippet"
                     comment="The set of bytes in a file. The name of the snippet is the name of the file appended with the byte range in parenthesis (ie: &#34;./file/name(2145:5532)&#34;)"
                     rdf="http://spdx.org/rdf/terms#Snippet"
                     subclassof="SpdxItem"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="SnippetAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for Snippet</xs:documentation>
         <xs:appinfo>
            <Element name="Snippet Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="SnippetFromFile" type="SnippetType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for File containing the SPDX element (e.g. the file contaning a snippet).</xs:documentation>
         <xs:appinfo>
            <Element name="snippetFromFile"
                     xmlname="SnippetFromFile"
                     comment="File containing the SPDX element (e.g. the file contaning a snippet)."
                     rdf="http://spdx.org/rdf/terms#snippetFromFile"
                     domain="Snippet"
                     range="File"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="SnippetName" type="SnippetNameType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item to name a specific snippet in a human convenient manner</xs:documentation>
         <xs:appinfo>
            <Element name="snippetName"
                     xmlname="SnippetName"
                     comment="Identify a specific snippet in a human convenient manner."
                     rdf="http://spdx.org/rdf/terms#snippetName"
                     subpropertyof="Name"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="SourceInfo" type="SourceInfoType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for Allows the producer(s) of the SPDX document to describe how the package was acquired and/or changed from the original source.</xs:documentation>
         <xs:appinfo>
            <Element name="sourceInfo"
                     xmlname="SourceInfo"
                     comment="Allows the producer(s) of the SPDX document to describe how the package was acquired and/or changed from the original source."
                     rdf="http://spdx.org/rdf/terms#sourceInfo"
                     domain="Package"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="SpdxDocument" type="SpdxDocumentType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for SpdxDocument</xs:documentation>
         <xs:appinfo>
            <Element name="SpdxDocument"
                     xmlname="SpdxDocument"
                     comment="An SpdxDocument is a summary of the contents, provenance, ownership and licensing analysis of a specific software package. This is, effectively, the top level of SPDX information."
                     rdf="http://spdx.org/rdf/terms#SpdxDocument"
                     subclassof="SpdxElement"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="SpdxDocumentAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for SpdxDocument</xs:documentation>
         <xs:appinfo>
            <Element name="SpdxDocument Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="SpdxElement" type="SpdxElementType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for SpdxElement</xs:documentation>
         <xs:appinfo>
            <Element name="SpdxElement"
                     xmlname="SpdxElement"
                     comment="An SpdxElement is any thing described in SPDX, either a document or an SpdxItem. SpdxElements can be related to other SpdxElements."
                     rdf="http://spdx.org/rdf/terms#SpdxElement"
                     subclassof="Thing"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="SpdxElementAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for SpdxElement</xs:documentation>
         <xs:appinfo>
            <Element name="SpdxElement Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="SpdxItem" type="SpdxItemType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for SpdxItem</xs:documentation>
         <xs:appinfo>
            <Element name="SpdxItem"
                     xmlname="SpdxItem"
                     comment="An SpdxItem is a potentially copyrightable work."
                     rdf="http://spdx.org/rdf/terms#SpdxItem"
                     subclassof="SpdxElement"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="SpdxItemAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for SpdxItem</xs:documentation>
         <xs:appinfo>
            <Element name="SpdxItem Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="SpecVersion" type="SpecVersionType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for Identifies the version of this specification that was used to produce this SPDX document. The value for this version of the spec is SPDX-1.2. The values SPDX-1.0 and SPDX-1.1 may also be supported by SPDX tools for backwards compatibility purposes.</xs:documentation>
         <xs:appinfo>
            <Element name="specVersion"
                     xmlname="SpecVersion"
                     comment="Identifies the version of this specification that was used to produce this SPDX document. The value for this version of the spec is SPDX-1.2. The values SPDX-1.0 and SPDX-1.1 may also be supported by SPDX tools for backwards compatibility purposes."
                     rdf="http://spdx.org/rdf/terms#specVersion"
                     domain="SpdxDocument"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="StandardLicenseHeader"
               type="StandardLicenseHeaderType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for License author's preferred text to indicated that a file is covered by the license.</xs:documentation>
         <xs:appinfo>
            <Element name="standardLicenseHeader"
                     xmlname="StandardLicenseHeader"
                     comment="License author's preferred text to indicated that a file is covered by the license."
                     rdf="http://spdx.org/rdf/terms#standardLicenseHeader"
                     domain="License"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="StandardLicenseTemplate"
               type="StandardLicenseTemplateType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for License template which describes sections of the license which can be varied. See License Template section of the specification for format information.</xs:documentation>
         <xs:appinfo>
            <Element name="standardLicenseTemplate"
                     xmlname="StandardLicenseTemplate"
                     comment="License template which describes sections of the license which can be varied. See License Template section of the specification for format information."
                     rdf="http://spdx.org/rdf/terms#standardLicenseTemplate"
                     domain="License"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="StartEndPointer" type="StartEndPointerType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for StartEndPointer</xs:documentation>
         <xs:appinfo>
            <Element name="StartEndPointer"
                     xmlname="StartEndPointer"
                     comment="Compound pointer to a range with a start and an end point."
                     rdf="http://www.w3.org/2009/pointers#StartEndPointer"
                     subclassof="CompoundPointer"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="StartEndPointerAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for StartEndPointer</xs:documentation>
         <xs:appinfo>
            <Element name="StartEndPointer Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="StartPointer" type="PointerType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for Pointer to the start point of the range in a compound pointer.</xs:documentation>
         <xs:appinfo>
            <Element name="startPointer"
                     xmlname="StartPointer"
                     comment="Pointer to the start point of the range in a compound pointer."
                     rdf="http://www.w3.org/2009/pointers#startPointer"
                     domain="CompoundPointer"
                     range="SinglePointer"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="Summary" type="SummaryType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for Provides a short description of the package.</xs:documentation>
         <xs:appinfo>
            <Element name="summary"
                     xmlname="Summary"
                     comment="Provides a short description of the package."
                     rdf="http://spdx.org/rdf/terms#summary"
                     domain="Package"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="Supplier" type="SupplierType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for The name and, optionally, contact information of the person or organization who was the immediate supplier of this package to the recipient. The supplier may be different than originator when the software has been repackaged. Values of this property must conform to the agent and tool syntax.</xs:documentation>
         <xs:appinfo>
            <Element name="supplier"
                     xmlname="Supplier"
                     comment="The name and, optionally, contact information of the person or organization who was the immediate supplier of this package to the recipient. The supplier may be different than originator when the software has been repackaged. Values of this property must conform to the agent and tool syntax."
                     rdf="http://spdx.org/rdf/terms#supplier"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="VerificationCodeExcludedFile"
               type="VerificationCodeExcludedFileType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for A file that was excluded when calculating the package verification code. This is usually a file containing SPDX data regarding the package. If a package contains more than one SPDX file all SPDX files must be excluded from the package verification code. If this is not done it would be impossible to correctly calculate the verification codes in both files.</xs:documentation>
         <xs:appinfo>
            <Element name="verificationCodeExcludedFile"
                     xmlname="VerificationCodeExcludedFile"
                     comment="A file that was excluded when calculating the package verification code. This is usually a file containing SPDX data regarding the package. If a package contains more than one SPDX file all SPDX files must be excluded from the package verification code. If this is not done it would be impossible to correctly calculate the verification codes in both files."
                     rdf="http://spdx.org/rdf/terms#verificationCodeExcludedFile"
                     domain="PackageVerificationCode"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="VersionInfo" type="VersionInfoType" nillable="true">
      <xs:annotation>
         <xs:documentation>A data type for Provides an indication of the version of the package that is described by this SpdxDocument.</xs:documentation>
         <xs:appinfo>
            <Element name="versionInfo"
                     xmlname="VersionInfo"
                     comment="Provides an indication of the version of the package that is described by this SpdxDocument."
                     rdf="http://spdx.org/rdf/terms#versionInfo"
                     domain="Package"
                     range="String"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="WithExceptionOperator"
               type="WithExceptionOperatorType"
               nillable="true">
      <xs:annotation>
         <xs:documentation>A data item for WithExceptionOperator</xs:documentation>
         <xs:appinfo>
            <Element name="WithExceptionOperator"
                     xmlname="WithExceptionOperator"
                     comment="Sometimes a set of license terms apply except under special circumstances. In this case, use the binary “WITH” operator to construct a new &lt;SPDX-License-Expression&gt; to represent the special exception situation. A valid license expression is where the left operand is a valid &lt;SPDX-License-Expression&gt; value and the right operand is an SPDX License List Exception Identifier (SPDX LL Exception Identifier) that represents the special exception terms. SPDX License LL Identifiers can be found on the SPDX License List. The syntax for the “WITH” operator is: &lt;SPDX-License-Expression-2&gt; = (&lt;SPDX-License-Expression-1&gt; WITH &lt;SPDX-LL-Exception-Identifier&gt;) For example, when the Bison exception is to be applied to GPL-2.0+, the expression would be: (GPL-2.0+ WITH Bison-exception-2.2), where: &lt;SPDX-License-Expression-1&gt; = GPL-2.0+ &lt;SPDX-LL-Exception-Identifier&gt; = Bison-exception-2.2 &lt;SPDX-License-Expression-1&gt; = (GPL-2.0+ WITH Bison-exception-2.2) If the applicable exception is not found on the SPDX License List, then use LicenseRef-[idString] to express the license and exception."
                     rdf="http://spdx.org/rdf/terms#WithExceptionOperator"
                     subclassof="AnyLicenseInfo"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
   <xs:element name="WithExceptionOperatorAugmentationPoint" abstract="true">
      <xs:annotation>
         <xs:documentation>An augmentation point for WithExceptionOperator</xs:documentation>
         <xs:appinfo>
            <Element name="WithExceptionOperator Augmentation Point"/>
         </xs:appinfo>
      </xs:annotation>
   </xs:element>
</xs:schema>
